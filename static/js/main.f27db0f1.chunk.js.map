{"version":3,"sources":["Cell.js","NumberPad.js","Grid.js","History.js","games.js","logic.js","App.js","index.js"],"names":["Cell","props","row","column","value","isGiven","canBeSolved","isIncorrect","handleChange","handleClick","handleKeyDown","inputAttrs","cellDivClassName","Array","isArray","disabled","candidates","map","i","includes","key","id","className","type","maxLength","pattern","inputmode","onChange","e","onClick","onKeyDown","NumberPad","forwardRef","ref","useState","isActive","setIsActive","numberPadWidth","setNumberPadWidth","top","bottom","left","right","numberPadStyle","setNumberPadStyle","activeCell","cellClicked","parentElement","numberPadRef","useRef","showNumberPad","hideNumberPad","useImperativeHandle","useEffect","grid","document","getElementById","current","contains","target","handleEscapeKey","offsetWidth","numberPad","gridTop","getBoundingClientRect","body","scrollTop","numberPadBottom","offsetHeight","offsetTop","numberPadLeft","offsetLeft","numberPadRight","windowHeight","documentElement","clientHeight","windowWidth","clientWidth","positionStyles","getNumberPadPosition","addEventListener","removeEventListener","clearButton","solveButton","style","numberButtons","push","createNumberButtons","querySelector","classList","Grid","values","completedGrid","onValueChange","givens","nextPossibleAnswers","showCandidates","highlightGivens","highlightSolvableCells","highlightIncorrectCells","gridValues","setCellClicked","setActiveCell","handleCellClick","coords","select","newValues","col","RegExp","test","Number","preventDefault","renderCell","j","isInteger","isInGameMode","gridClassName","createGrid","History","currentStep","historyLength","history","length","previousButtonAttrs","jumpToStepInHistory","nextButtonAttrs","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","games","getGridNextAnswers","solveCells","solveNonets","reduceCandidatesXWing","removeNakeds","initReduceCandidates","updateGrid","updatedCells","updatedGrid","_","cloneDeep","forEach","cell","generateNonet","topLeftCellRow","topLeftCellCol","nonet","getRowValues","rowValues","getColumnValues","columnValues","getNonetValues","getNonetRowsCols","rowOrCol","rowOrCol1","rowOrCol2","rowOrCol3","isCellSolved","crosshatchNonet","nonetValues","filter","newCandidates","nonetRows","nonetColumns","candidate","temporaryNonetValues","index","nonetRowValues","nonetColumnValues","emptyCount","gridCell","nonetValuesArrayIndexToGridCell","indexOf","nonetValuesIndex","nonetTopLeftSqRow","nonetTopLeftSqCol","gridCellRow","gridCellCol","solvedCells","undefined","setCandidates","getCandidates","allValues","from","Set","concat","findNakeds","quantity","unitValues","tempUnitValues","slice","cellsWithSameCandidates","result","findNakedsStep","arrayOfValues","cellsWithCandidates","lastGoodValue","cellsToExcludeCount","reduce","accumulator","currentValue","currentIndex","combined","shift","removeNakedsFromUnit","nakeds","unitIndexes","unitType","results","cellValue","differentCandidates","isEqual","gridClone","rowIndex","removeNakeds3","removeNakeds4","updatedCell","columnIndex","xWings","examineUnit","unitIndex","mainAxis","candidatesExamined","unitResults","cellIndex","candidateValue","count","candidatePositions","cellValueForComparison","cellIndexForComparison","candidateCellPair","findOtherCandidatePair","unit","candidatePairUnitIndex","cellACrossAxisIndex","cellBCrossAxisIndex","cellAValue","cellBValue","positions","newCandidatePositions","fourPositionsOfCandidate","axis","findXWings","xWing","xWingRows","position","rowPosition","xWingColumns","columnPosition","xWingRow","candidatesToRemove","removeCandidateFromCell","xWingColumn","getCellValue","reducedCandidatesRow","reduceCandidates","reducedCandidatesColumn","direction","nonetMainAxisSets","allCandidatesInCrossAxisSets","nonetMainAxisSet","allCandidatesInMainAxisSet","otherMainAxisSet1","otherMainAxisSet2","gridMainAxisSetIndex","gridMainAxisSetValues","indexesToInclude","allCandidatesUniqueToMainAxisSet","gridCrossAxisSetIndex","rowArrayValues","columnArrayValues","some","arrayValue","solveCell","verifyCompletedGrid","gridColumns","gridNonets","allRowsIncludeAllValues","every","allColumnsIncludeAllValues","allNonetsIncludeAllValues","App","currentGrid","JSON","parse","localStorage","getItem","setHistory","stepNumber","setStepNumber","setIsInGameMode","setShowCandidates","setHighlightGivens","setHighlightSolvableCells","setHighlightIncorrectCells","prevHistory","addHistory","newHistory","currentGridValues","nextGridValues","solveGridSteps","solveGrid","console","log","getGridAnswers","checkCompletedGridMemoizedCallback","useCallback","flat","isGridFull","alert","updateGame","getRandomInt","max","Math","floor","random","createNewGame","initialGrid","setItem","stringify","easy","medium","hard","expert","name","checked","htmlFor","step","ReactDOM","render","StrictMode"],"mappings":"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AClO,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,MAEtO,OAAU,CACN,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IACvO,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,MAE3O,KAAQ,CACJ,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAC1O,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KACzO,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,KACzO,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,KACzO,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,KACxO,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,KACxO,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,KACvO,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,IAC1O,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,KACrO,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,KAEvO,OAAU,CACN,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,KACzO,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,KACzO,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,KAC1O,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,KAC1O,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,KAC1O,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,KACzO,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IACzO,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,IACxO,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,KACnO,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,KACvO,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,KAC3O,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAC5O,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,KACxO,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC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","file":"static/js/main.f27db0f1.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Cell(props) {\n\n    const {row, column, value, isGiven, canBeSolved, isIncorrect, handleChange, handleClick, handleKeyDown} = props;\n    const inputAttrs = {};\n    const cellDivClassName = `cell cell-row-${row} cell-column-${column}${ isGiven === true ? ' given' : '' }${ canBeSolved === true ? ' can-be-solved' : '' }${ isIncorrect === true ? ' incorrect' : '' }`;\n\n    // set 'value' attribute for cell input\n    if (Array.isArray(value)) {\n        inputAttrs.value = [];\n    } else {\n        inputAttrs.value = value;\n    }\n\n    // set 'disabled' attribute for cell input, if a 'given' number\n    if (isGiven === true) {\n        inputAttrs.disabled = true;\n    }\n\n    const candidates = [1,2,3,4,5,6,7,8,9].map(function(i) {\n        if (Array.isArray(value) && value.includes(i)) {\n            return <div key={`r${row}c${column}-p${i}`}>{i}</div>\n        } else {\n            return <div key={`r${row}c${column}-p${i}`}></div>\n        }\n    });\n\n    return (\n        <div id={`r${row}c${column}`} className={cellDivClassName}>\n            <input\n                type=\"text\"\n                maxLength=\"1\"\n                pattern=\"[1-9]\"\n                inputmode=\"none\"\n                onChange={(e) => handleChange([row, column], e)}\n                onClick={(e) => handleClick([row, column], e)}\n                onKeyDown={(e) => handleKeyDown([row, column], e)}\n                {...inputAttrs}\n            />\n            {Array.isArray(value) && <div className=\"candidates\">{candidates}</div>}\n        </div>\n    );\n}\n\nexport default Cell;","import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport './NumberPad.css';\n\nfunction getNumberPadPosition(activeCell, numberPad) {\n    const grid = document.getElementById('grid');\n    const gridRect = grid.getBoundingClientRect();\n    const gridTop = gridRect.top + document.body.scrollTop;\n    const cellBottom = activeCell.offsetHeight + activeCell.offsetTop + gridTop;\n    const numberPadBottom = cellBottom + numberPad.offsetHeight;\n    const numberPadWidth = numberPad.offsetWidth;\n    const numberPadLeft = activeCell.offsetLeft + (activeCell.offsetWidth/2) - numberPadWidth/2;\n    const numberPadRight = numberPadLeft + numberPadWidth;\n    const windowHeight = document.documentElement.clientHeight;\n    const windowWidth = document.documentElement.clientWidth;\n\n    const positionStyles = {\n        top: activeCell ? activeCell.offsetTop + activeCell.offsetHeight : 0,\n        bottom: 'auto',\n        left: activeCell ? activeCell.offsetLeft + (activeCell.offsetWidth/2) - numberPadWidth/2 : 0,\n        right: 'auto'\n    };\n\n    if (numberPadBottom > windowHeight) {\n        // bottom of number pad would go offscreen bottom\n        positionStyles.top = 'auto';\n        positionStyles.bottom = grid.offsetHeight - activeCell.offsetTop;\n    }\n\n    if (numberPadLeft < 0) {\n        // left of number pad would go offscreen left\n        positionStyles.left = 0;\n    }\n\n    if (numberPadRight > windowWidth) {\n        // right of number pad would go offscreen right\n        positionStyles.left = 'auto';\n        positionStyles.right = 0;\n    }\n\n    return positionStyles;\n    \n}\n\nconst NumberPad = forwardRef((props, ref) => {\n\n    const [isActive, setIsActive] = useState(false);\n    const [numberPadWidth, setNumberPadWidth] = useState(0);\n    const [numberPadStyle, setNumberPadStyle] = useState({\n        top: '-9999px',\n        bottom: 'auto',\n        left: '-9999px',\n        right:'auto'\n    });\n\n    const activeCell = props.cellClicked ? props.cellClicked.parentElement : null;\n    const numberPadRef = useRef(null);\n\n    const showNumberPad = () => {\n        setIsActive(true);\n    }\n\n    const hideNumberPad = () => {\n        setIsActive(false);\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            showNumberPad: showNumberPad,\n            hideNumberPad: hideNumberPad,\n            isActive: isActive\n        };\n    });\n\n    useEffect(() => {\n\n        const grid = document.getElementById('grid');\n\n        const handleClick = e => {\n            if (numberPadRef.current.contains(e.target) || grid.contains(e.target)) {\n                // inside click\n                return;\n            }\n            // outside click\n            hideNumberPad();\n        };\n        const handleEscapeKey = e => {\n            if (e.key === 'Escape') {\n                hideNumberPad();\n            }\n        };\n\n        if (isActive) {\n            setNumberPadWidth(numberPadRef.current.offsetWidth);\n            setNumberPadStyle(getNumberPadPosition(activeCell, numberPadRef.current));\n        } else {\n            setNumberPadStyle({\n                top: '-9999px',\n                bottom: 'auto',\n                left: '-9999px',\n                right:'auto'\n            });\n        }\n\n        // add event listener for outside click when mounted\n        document.addEventListener('mousedown', handleClick);\n        document.addEventListener('keyup', handleEscapeKey);\n\n        // return functions to be called when unmounted\n        return () => {\n            document.removeEventListener('mousedown', handleClick);\n            document.removeEventListener('keyup', handleEscapeKey);\n        };\n\n    }, [isActive, numberPadWidth, activeCell]);\n\n    function createNumberButtons() {\n        const numberButtons = [];\n    \n        for (let i = 1; i < 10; i++) {\n            numberButtons.push(<button type=\"button\" value={i} key={`numpad-${i}`} onClick={props.handleClick}>{i}</button>);\n        }\n    \n        return numberButtons;\n    }\n\n    const clearButton = (\n        <button\n            type=\"button\"\n            value=\"\"\n            className=\"clear-button\"\n            onClick={props.handleClick}\n        >Clear</button>\n    );\n\n    const solveButton = (\n        <button\n            type=\"button\"\n            value=\"\"\n            className=\"solve-button\"\n            onClick={props.handleClick}\n        >Solve</button>\n    );\n        \n    return (\n        <div\n            className={isActive ? 'number-pad active' : 'number-pad'}\n            style={numberPadStyle}\n            ref={numberPadRef}\n        >\n            {createNumberButtons()}\n            { activeCell && activeCell.querySelector('input').value !== '' ? clearButton : null }\n            { activeCell && activeCell.classList.contains('can-be-solved') ? solveButton : null }\n        </div>\n    );\n\n});\n\nexport default NumberPad;","import React, { useState, useRef } from 'react';\nimport Cell from './Cell';\nimport NumberPad from './NumberPad';\nimport './Grid.css';\n\nfunction Grid(props) {\n\n    const ref = useRef(null);\n    const {values, completedGrid, onValueChange, givens, nextPossibleAnswers, showCandidates, highlightGivens, highlightSolvableCells, highlightIncorrectCells} = props;\n    const gridValues = values;\n    const [cellClicked, setCellClicked] = useState(null);\n    const [activeCell, setActiveCell] = useState(null);\n\n    function handleCellClick(coords, e) {\n        if (cellClicked === e.target) {\n            ref.current.isActive ? ref.current.hideNumberPad() : ref.current.showNumberPad();\n        } else {\n            ref.current.showNumberPad();\n        }\n        setCellClicked(e.target);\n        setActiveCell(coords);\n        e.target.select();\n    }\n\n    function handleNumberPadButtonClick(e) {\n        const newValues = [...gridValues];\n        const row = activeCell[0];\n        const col = activeCell[1];\n        \n        if (e.target.className === 'clear-button') {\n            newValues[row][col] = [];\n        } else if (e.target.className === 'solve-button') {\n            newValues[row][col] = completedGrid[row][col];\n        } else {\n            newValues[row][col] = Number(e.target.value);\n        }\n        onValueChange(newValues);\n        ref.current.hideNumberPad();\n    }\n\n    function handleKeyDown(coords, e) {\n        const newValues = [...gridValues];\n        const row = coords[0];\n        const col = coords[1];\n\n        if (e.key === 'Backspace' || e.key === 'Delete') {\n            newValues[row][col] = [];\n        } else if (RegExp('[1-9]').test(e.key)) {\n            newValues[row][col] = Number(e.key);\n        } else {\n            e.preventDefault();\n        }\n        onValueChange(newValues);\n        ref.current.hideNumberPad();\n    }\n\n    function handleChange(coords, e) {\n        // This isn't needed? But without 'onChange' on the Cell input React throws a warning in the console\n        /*const newValues = [...gridValues];\n        const row = coords[0];\n        const col = coords[1];\n        newValues[row][col] = Number(e.target.value);\n        onValueChange(newValues);\n        ref.current.hideNumberPad();*/\n    }\n\n    function createGrid() {\n        let grid = [];\n    \n        for (let i = 0; i < 9; i++) {\n            for (let j = 0; j < 9; j++) {\n                grid.push(renderCell(i, j));\n            }\n        }\n    \n        return grid;\n    }\n    \n    function renderCell(i, j) {\n        return (\n            <Cell\n                key={`r${i}c${j}`}\n                row={i}\n                column={j}\n                value={gridValues[i][j]}\n                handleChange={handleChange}\n                handleClick={handleCellClick}\n                handleKeyDown={handleKeyDown}\n                isGiven={Number.isInteger(givens[i][j])}\n                canBeSolved={Number.isInteger(nextPossibleAnswers[i][j])}\n                isIncorrect={ props.isInGameMode && (Number.isInteger(gridValues[i][j]) && gridValues[i][j] !== completedGrid[i][j]) }\n            />\n        );\n    }\n\n    const gridClassName = `grid${showCandidates === false ? ' hide-candidates' : ''}${highlightGivens === true ? ' highlight-givens' : ''}${highlightSolvableCells === true ? ' highlight-solvable-cells' : ''}${highlightIncorrectCells === true ? ' highlight-incorrect-cells' : ''}`;\n\n    return (\n        <div className=\"grid-wrapper\">\n            <div id=\"grid\" className={gridClassName}>\n                {createGrid()}\n            </div>\n            <NumberPad\n                cellClicked={cellClicked}\n                handleClick={handleNumberPadButtonClick}\n                ref={ref}\n            />\n        </div>\n    );\n}\n\nexport default Grid;","import React from 'react';\nimport './History.css';\n\nfunction History(props) {\n\n    const currentStep = props.currentStep;\n    const historyLength = props.history.length;\n\n    // Previous Button\n    const previousButtonAttrs = {\n        onClick: () => props.jumpToStepInHistory(currentStep - 1),\n        disabled: false\n    }\n    if (currentStep === 0) {\n        previousButtonAttrs.disabled = true;\n    }\n\n    // Next Button\n    const nextButtonAttrs = {\n        onClick: () => props.jumpToStepInHistory(currentStep + 1),\n        disabled: false\n    }\n    if (historyLength - 1 === currentStep) {\n        nextButtonAttrs.disabled = true;\n    }\n\n    return (\n        <div className=\"history\">\n            <h2>Game History</h2>\n            <div className=\"history-nav d-flex\">\n                <button {...previousButtonAttrs}><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-left\" className=\"svg-inline--fa fa-caret-left fa-w-6\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\"><path fill=\"currentColor\" d=\"M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z\"></path></svg><span className=\"sr-only\">Previous Step</span></button>\n                    <span className=\"history-current-step\">{currentStep}&nbsp;/&nbsp;{historyLength - 1}</span>\n                <button {...nextButtonAttrs}><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-right\" className=\"svg-inline--fa fa-caret-right fa-w-6\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\"><path fill=\"currentColor\" d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"></path></svg><span className=\"sr-only\">Next Step</span></button>\n            </div>\n        </div>\n    );\n}\n\nexport default History;","const games = {\n    'easy': [\n        [[[],[],[],[],[],3,1,[],4],[2,6,[],5,[],4,[],[],[]],[[],3,9,[],[],[],8,5,[]],[7,[],3,[],4,6,[],[],[]],[[],[],[],3,[],8,[],[],[]],[[],[],[],7,1,[],4,[],3],[[],4,2,[],[],[],7,3,[]],[[],[],[],4,[],5,[],1,9],[9,[],6,8,[],[],[],[],[]]],\n        [[[],[],4,7,[],[],5,[],6],[[],[],1,[],[],4,[],[],2],[2,[],[],[],1,[],[],[],8],[1,[],9,[],7,3,[],[],[]],[[],6,[],1,[],5,[],2,[]],[[],[],[],6,9,[],7,[],1],[5,[],[],[],2,[],[],[],7],[7,[],[],3,[],[],2,[],[]],[9,[],2,[],[],7,8,[],[]]]\n    ],\n    'medium': [\n        [[3,[],[],[],6,[],[],[],[]],[[],1,4,[],[],[],9,[],7],[6,5,[],[],[],7,[],[],[]],[[],8,[],[],2,5,[],[],[]],[1,[],9,[],[],[],6,[],2],[[],[],[],6,9,[],[],8,[]],[[],[],[],4,[],[],[],7,6],[4,[],1,[],[],[],5,9,[]],[[],[],[],[],7,[],[],[],8]],\n        [[[],[],[],[],1,[],[],6,9],[[],[],[],[],[],8,[],3,7],[[],[],[],[],[],[],8,[],[]],[4,[],[],3,2,1,9,[],[]],[[],[],7,[],9,[],5,[],[]],[[],[],2,7,5,6,[],[],3],[[],[],8,[],[],[],[],[],[]],[5,3,[],2,[],[],[],[],[]],[9,2,[],[],4,[],[],[],[]]]\n    ],\n    'hard': [\n        [[[],7,[],[],[],[],[],[],[]],[[],[],[],[],[],[],8,[],[]],[2,[],6,[],9,1,4,[],[]],[[],[],[],9,[],[],[],6,[]],[[],1,5,[],[],7,[],4,[]],[[],8,[],[],5,[],[],9,[]],[[],3,[],4,[],[],[],[],[]],[[],[],8,[],6,[],7,[],[]],[7,[],[],[],3,[],[],1,9]],\n        [[5,[],3,7,6,[],[],[],[]],[[],2,6,[],[],[],7,[],[]],[[],[],[],1,[],[],[],8,[]],[7,[],[],[],4,[],[],[],1],[[],[],4,[],[],[],[],[],6],[[],1,[],[],[],6,[],7,3],[9,[],[],[],[],[],[],[],8],[[],[],[],[],[],5,[],[],[]],[[],[],[],6,[],3,1,9,[]]],\n        [[[],6,[],[],[],5,[],[],[]],[[],7,[],[],[],[],[],[],1],[[],[],[],[],6,3,4,[],[]],[[],[],3,[],8,[],[],[],[]],[2,1,[],[],9,[],[],[],5],[4,[],[],[],[],7,8,[],[]],[[],[],1,6,[],[],[],8,4],[[],[],[],[],[],[],[],5,[]],[8,[],[],[],4,[],6,1,[]]],\n        [[[],[],5,7,[],[],[],[],[]],[[],[],7,[],[],9,6,[],8],[[],8,[],[],[],2,[],1,[]],[[],3,[],[],[],[],[],[],[]],[5,[],[],2,6,1,[],7,[]],[[],[],[],8,[],[],1,[],9],[[],[],[],1,[],[],[],[],3],[3,[],9,[],2,[],[],8,[]],[[],[],[],[],4,[],[],[],[]]],\n        [[[],3,[],[],[],5,[],[],[]],[5,1,[],[],3,[],8,[],7],[[],[],[],4,[],[],[],[],1],[[],6,[],2,[],[],[],1,[]],[[],[],1,[],[],[],7,[],[]],[[],9,[],[],[],1,[],4,[]],[4,[],[],[],[],9,[],[],[]],[1,[],9,[],8,[],[],7,5],[[],[],[],3,[],[],[],8,[]]],\n        [[[],[],[],[],[],8,[],7,[]],[[],[],5,[],6,9,[],[],[]],[[],[],[],[],[],5,8,9,2],[[],[],1,6,[],[],[],3,[]],[4,[],[],[],[],[],[],[],1],[[],9,[],[],[],1,4,[],[]],[7,4,3,9,[],[],[],[],[]],[[],[],[],4,2,[],3,[],[]],[[],8,[],5,[],[],[],[],[]]],\n        [[[],[],2,1,8,6,[],[],[]],[[],[],[],[],[],[],2,[],[]],[[],3,[],9,[],[],[],[],[]],[2,[],3,6,[],[],8,9,[]],[4,[],[],[],5,[],[],[],1],[[],6,8,[],[],2,7,[],5],[[],[],[],[],[],9,[],5,[]],[[],[],4,[],[],[],[],[],[]],[[],[],[],3,6,7,9,[],[]]],\n        [[6,[],[],[],9,2,[],[],[]],[[],[],8,5,[],6,[],[],2],[3,[],[],4,[],[],[],[],[]],[2,[],4,[],[],[],[],8,[]],[[],[],5,[],[],[],[],[],1],[[],[],[],9,[],[],6,[],5],[[],[],[],[],1,[],3,[],[]],[4,[],[],[],[],[],[],9,[]],[[],1,[],7,8,[],[],[],6]],\n        [[9,6,[],[],1,[],[],[],3],[3,1,[],[],8,[],2,[],[]],[[],[],[],[],[],[],8,[],[]],[[],4,9,[],[],6,[],[],[]],[1,[],[],[],9,8,[],[],[]],[[],[],6,5,[],[],[],3,7],[[],3,[],[],[],[],[],2,6],[[],9,[],1,[],[],[],[],[]],[[],7,4,[],2,5,[],9,[]]],\n        [[6,[],[],[],[],[],[],3,[]],[[],[],1,[],[],[],5,[],7],[[],7,[],2,[],4,[],8,[]],[7,[],2,4,[],6,[],[],[]],[[],[],[],[],[],[],3,[],[]],[9,1,[],[],[],[],2,7,4],[[],6,7,8,9,[],1,4,3],[1,4,[],[],3,[],[],9,[]],[[],[],[],[],4,[],[],[],2]]\n    ],\n    'expert': [\n        [[[],[],[],9,[],2,[],[],5],[[],[],[],[],[],5,1,3,[]],[[],[],9,[],[],[],[],2,[]],[[],5,3,[],[],[],[],[],6],[4,[],[],[],8,[],[],[],1],[9,[],[],[],[],[],4,7,[]],[[],6,[],[],[],[],7,[],[]],[[],9,1,4,[],[],[],[],[]],[8,[],[],5,[],7,[],[],[]]],\n        [[[],[],[],9,[],2,[],[],5],[[],[],[],[],[],5,1,3,[]],[[],[],9,[],[],[],[],2,[]],[[],5,3,[],[],[],[],[],6],[4,[],[],[],8,[],[],[],1],[9,[],[],[],[],[],4,7,[]],[[],6,[],[],[],[],7,[],[]],[[],9,1,4,[],[],[],[],[]],[8,[],[],5,[],7,[],[],[]]],\n        [[[],[],[],8,[],[],[],1,[]],[[],[],[],2,[],[],8,9,6],[[],[],[],[],6,[],[],[],2],[2,[],[],[],[],[],3,[],[]],[[],[],8,3,[],1,4,[],[]],[[],[],7,[],[],[],[],[],9],[6,[],[],[],7,[],[],[],[]],[9,7,2,[],[],3,[],[],[]],[[],3,[],[],[],4,[],[],[]]],\n        [[[],9,1,[],[],[],[],[],5],[[],[],[],[],9,4,3,[],[]],[[],3,[],6,[],[],[],[],[]],[[],[],[],[],[],[],[],7,9],[2,[],[],1,[],7,[],[],6],[8,5,[],[],[],[],[],[],[]],[[],[],[],[],[],1,[],5,[]],[[],[],2,4,3,[],[],[],[]],[5,[],[],[],[],[],2,4,[]]],\n        [[[],[],[],[],[],1,[],[],[]],[[],6,[],[],[],[],4,[],[]],[[],9,[],5,3,[],[],[],8],[[],4,[],[],5,3,[],[],7],[[],8,[],[],[],[],[],5,[]],[7,[],[],1,2,[],[],6,[]],[8,[],[],[],1,6,[],2,[]],[[],[],5,[],[],[],[],9,[]],[[],[],[],8,[],[],[],[],[]]],\n        [[[],[],[],[],[],7,3,[],[]],[[],7,[],[],8,[],5,[],9],[6,[],1,[],[],[],[],[],7],[[],[],5,[],[],6,[],9,[]],[[],[],[],[],4,[],[],[],[]],[[],6,[],5,[],[],2,[],[]],[2,[],[],[],[],[],9,[],1],[1,[],9,[],5,[],[],7,[]],[[],[],3,8,[],[],[],[],[]]],\n        [[3,[],[],[],[],2,[],[],6],[[],[],[],[],[],[],[],[],[]],[[],[],[],6,4,[],7,3,5],[[],1,[],[],2,[],[],6,[]],[6,[],[],4,[],7,[],[],1],[[],9,[],[],3,[],[],2,[]],[5,2,3,[],6,1,[],[],[]],[[],[],[],[],[],[],[],[],[]],[7,[],[],5,[],[],[],[],2]],\n        [[7,[],[],1,4,[],[],[],9],[1,[],[],2,[],[],[],4,[]],[[],5,[],[],3,[],[],[],[]],[[],[],[],[],2,[],1,[],4],[[],[],6,[],7,[],8,[],[]],[5,[],1,[],9,[],[],[],[]],[[],[],[],[],5,[],[],6,[]],[[],3,[],[],[],4,[],[],7],[2,[],[],[],8,6,[],[],1]],\n        [[[],[],[],[],5,4,3,8,[]],[[],[],5,9,8,[],[],[],2],[[],8,[],[],3,[],[],[],[]],[5,[],[],6,[],[],[],7,[]],[3,[],4,[],7,[],2,[],9],[[],7,[],[],[],9,[],[],1],[[],[],[],[],1,[],[],2,[]],[7,[],[],[],9,3,6,[],[]],[[],5,1,7,6,[],[],[],[]]],\n        [[[],[],[],[],[],[],6,8,[]],[[],[],[],[],7,3,[],[],9],[3,[],9,[],[],[],[],4,5],[4,9,[],[],[],[],[],[],[]],[8,[],3,[],5,[],9,[],2],[[],[],[],[],[],[],[],3,6],[9,6,[],[],[],[],3,[],8],[7,[],[],6,8,[],[],[],[]],[[],2,8,[],[],[],[],[],[]]],\n        [[6,[],[],1,7,[],[],[],5],[[],[],[],[],4,[],[],2,[]],[[],[],[],[],[],[],8,9,[]],[[],3,7,8,[],[],[],[],2],[5,[],[],[],[],1,[],[],9],[[],[],2,[],[],[],[],[],[]],[[],[],5,[],2,4,[],[],[]],[[],[],[],[],1,[],6,[],[]],[7,[],[],3,[],[],[],[],[]]],\n        [[[],[],[],1,[],[],6,[],3],[[],8,7,[],4,[],[],[],5],[9,[],3,[],[],[],[],[],[]],[[],[],5,[],[],6,[],[],[]],[7,[],[],[],[],1,[],[],[]],[[],9,[],[],[],3,[],5,[]],[1,6,[],[],[],[],[],[],[]],[5,[],[],[],[],[],7,[],4],[[],[],[],[],8,[],[],[],2]],\n        [[[],[],[],6,[],[],[],8,[]],[[],[],2,[],[],5,[],4,[]],[[],[],3,[],2,[],[],1,[]],[[],2,6,[],[],7,1,[],[]],[9,[],[],[],[],[],[],[],5],[[],[],4,9,[],[],2,7,[]],[[],1,[],[],5,[],3,[],[]],[[],6,[],3,[],[],8,[],[]],[[],9,[],[],[],1,[],[],[]]],\n        [[[],[],[],3,[],[],6,5,[]],[[],[],1,[],2,[],[],8,[]],[5,3,[],6,9,[],[],1,[]],[[],[],5,[],[],2,1,3,[]],[[],[],[],9,5,[],2,4,[]],[7,[],[],[],[],[],8,[],[]],[[],[],7,8,[],[],5,[],3],[8,[],[],[],3,[],[],7,[]],[2,4,3,[],1,7,[],6,[]]]\n    ]\n}\n\nexport default games;","import _ from 'lodash';\n\nfunction getDiffOfCompletedCells(currentGrid, nextGrid) {\n    const result = nextGrid.map(function(row, i) {\n        const rowValues = row.map(function(value, j) {\n            if (Number.isInteger(value) && currentGrid[i][j] !== value) {\n                return value;\n            } else {\n                return [];\n            }\n        });\n        return rowValues;\n    });\n    return result;\n}\n\nfunction getGridNextAnswers(grid) {\n    return solveCells(solveNonets(reduceCandidatesXWing(removeNakeds(initReduceCandidates(grid)))));\n}\n\nfunction getGridAnswers(grid) {\n    let completedGrid = [];\n    let solveGridSteps = 0;\n\n    function solveGrid(grid) {\n        solveGridSteps++;\n        if (verifyCompletedGrid(grid) === true) {\n            return;\n        } else if (solveGridSteps > 81) {\n            console.log('Cannot solve sudoku puzzle');\n            return;\n        } else {\n            completedGrid = getGridNextAnswers(grid);\n            solveGrid(completedGrid);\n        }\n    }\n    solveGrid(grid);\n    return completedGrid;\n}\n\nfunction updateGrid(grid, updatedCells) {\n    const updatedGrid = _.cloneDeep(grid);\n    updatedCells.forEach(function(cell) {\n        updatedGrid[cell.row][cell.column] = cell.value;\n    });\n    return updatedGrid;\n}\n\nfunction generateNonet(grid, topLeftCellRow, topLeftCellCol) {\n    let nonet = [];\n\n    for (let i = topLeftCellRow; i < topLeftCellRow + 3; i++) {\n        for (let j = topLeftCellCol; j < topLeftCellCol + 3; j++) {\n            nonet.push(grid[i][j]);\n        }\n    }\n\n    return nonet;\n}\n\nfunction getCellValue(grid, row, column) {\n    return grid[row][column];\n}\n\nfunction getRowValues(grid, row) {\n    let rowValues = [];\n    grid[row].forEach(function(value) {\n        rowValues.push(value);\n    });\n    return rowValues;\n}\n\nfunction getColumnValues(grid, column) {\n    let columnValues = [];\n    grid.forEach(function(row) {\n        columnValues.push(row[column]);\n    });\n    return columnValues;\n}\n\nfunction getNonetValues(grid, row, column) {\n\n    // sqr1\n    if (row <= 2 && column <= 2) {\n        return generateNonet(grid, 0,0);\n    }\n\n    // sqr2\n    if (row <= 2 && (column >= 3 && column <= 5)) {\n        return generateNonet(grid, 0,3);\n    }\n\n    // sqr3\n    if (row <= 2 && column >= 6) {\n        return generateNonet(grid, 0,6);\n    }\n\n    // sqr4\n    if ((row >= 3 && row <= 5) && column <= 2) {\n        return generateNonet(grid, 3,0);\n    }\n\n    // sqr5\n    if ((row >= 3 && row <= 5) && (column >= 3 && column <= 5)) {\n        return generateNonet(grid, 3,3);\n    }\n\n    // sqr6\n    if ((row >= 3 && row <= 5) && column >= 6) {\n        return generateNonet(grid, 3,6);\n    }\n\n    // sqr7\n    if (row >= 6 && column <= 2) {\n        return generateNonet(grid, 6,0);\n    }\n\n    // sqr8\n    if (row >= 6 && (column >= 3 && column <= 5)) {\n        return generateNonet(grid, 6,3);\n    }\n\n    // sqr9\n    if (row >= 6 && column >= 6) {\n        return generateNonet(grid, 6,6);\n    }\n}\n\nfunction getNonetRowsCols(rowOrCol) {\n    let rowOrCol1,\n        rowOrCol2,\n        rowOrCol3;\n\n    if (rowOrCol === 0 || rowOrCol === 3 || rowOrCol === 6) {\n        rowOrCol1 = rowOrCol;\n        rowOrCol2 = rowOrCol + 1;\n        rowOrCol3 = rowOrCol + 2;\n    }\n    if (rowOrCol === 1 || rowOrCol === 4 || rowOrCol === 7) {\n        rowOrCol1 = rowOrCol - 1;\n        rowOrCol2 = rowOrCol;\n        rowOrCol3 = rowOrCol + 1;\n    }\n    if (rowOrCol === 2 || rowOrCol === 5 || rowOrCol === 8) {\n        rowOrCol1 = rowOrCol - 2;\n        rowOrCol2 = rowOrCol - 1;\n        rowOrCol3 = rowOrCol;\n    }\n\n    return [rowOrCol1, rowOrCol2, rowOrCol3];\n}\n\nfunction isCellSolved (grid, row, column) {\n    if (typeof grid[row][column] === 'number') {\n        return true;\n    }\n}\n\nfunction isCleanValue(value) {\n    // check if the value is an empty array\n    if (Array.isArray(value) && value.length === 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction crosshatchNonet (grid, row, column) {\n\n    const nonetValues = getNonetValues(grid, row, column);\n    const candidates = [1,2,3,4,5,6,7,8,9].filter(function(value) {\n        return !(nonetValues.includes(value));\n    });\n    let newCandidates = [];\n    const nonetRows = getNonetRowsCols(row);\n    const nonetColumns = getNonetRowsCols(column);\n\n    candidates.forEach(function(candidate) {\n\n        const temporaryNonetValues = nonetValues.map(function(value) {\n            if (Array.isArray(value)) {\n                return \"o\";\n            } else {\n                return value;\n            }\n        });\n\n        temporaryNonetValues.forEach(function(value, index) {\n            let nonetRowValues;\n            let nonetColumnValues;\n\n            if (index <= 2) {\n                nonetRowValues = getRowValues(grid, nonetRows[0]);\n            }\n            if (index >=3 && index <=5) {\n                nonetRowValues = getRowValues(grid, nonetRows[1]);\n            }\n            if (index >= 6) {\n                nonetRowValues = getRowValues(grid, nonetRows[2]);\n            }\n\n            if (index === 0 || index === 3 || index === 6) {\n                nonetColumnValues = getColumnValues(grid, nonetColumns[0]);\n            }\n            if (index === 1 || index === 4 || index === 7) {\n                nonetColumnValues = getColumnValues(grid, nonetColumns[1]);\n            }\n            if (index === 2 || index === 5 || index === 8) {\n                nonetColumnValues = getColumnValues(grid, nonetColumns[2]);\n            }\n\n            if (value === 'o') {\n                if (nonetRowValues.includes(candidate)) {\n                    temporaryNonetValues[index] = 'x';\n                }\n                if (nonetColumnValues.includes(candidate)) {\n                    temporaryNonetValues[index] = 'x';\n                }\n            }\n\n        });\n\n        let emptyCount = 0;\n\n        temporaryNonetValues.forEach(function(value) {\n            if (value === 'o') {\n                emptyCount++;\n            }\n        });\n\n        const gridCell = nonetValuesArrayIndexToGridCell(temporaryNonetValues.indexOf('o'), row, column);\n\n        if (emptyCount === 1) {\n            newCandidates.push([gridCell[0], gridCell[1], candidate]);\n        }\n        \n    });\n\n    if (newCandidates.length === 1) {\n        return {\n            row: newCandidates[0][0],\n            column: newCandidates[0][1],\n            value: newCandidates[0][2]\n        };\n    } \n\n}\n\nfunction nonetValuesArrayIndexToGridCell(nonetValuesIndex, nonetTopLeftSqRow, nonetTopLeftSqCol) {\n    let gridCellRow = nonetTopLeftSqRow;\n    let gridCellCol = nonetTopLeftSqCol;\n\n    if (nonetValuesIndex === 1) {\n        gridCellCol = nonetTopLeftSqCol + 1;\n    }\n    if (nonetValuesIndex === 2) {\n        gridCellCol = nonetTopLeftSqCol + 2;\n    }\n    if (nonetValuesIndex === 3) {\n        gridCellRow = nonetTopLeftSqRow + 1;\n    }\n    if (nonetValuesIndex === 4) {\n        gridCellRow = nonetTopLeftSqRow + 1;\n        gridCellCol = nonetTopLeftSqCol + 1;\n    }\n    if (nonetValuesIndex === 5) {\n        gridCellRow = nonetTopLeftSqRow + 1;\n        gridCellCol = nonetTopLeftSqCol + 2;\n    }\n    if (nonetValuesIndex === 6) {\n        gridCellRow = nonetTopLeftSqRow + 2;\n    }\n    if (nonetValuesIndex === 7) {\n        gridCellRow = nonetTopLeftSqRow + 2;\n        gridCellCol = nonetTopLeftSqCol + 1;\n    }\n    if (nonetValuesIndex === 8) {\n        gridCellRow = nonetTopLeftSqRow + 2;\n        gridCellCol = nonetTopLeftSqCol + 2;\n    }\n\n    return [gridCellRow, gridCellCol];\n}\n\nfunction solveNonets(grid) {\n    const solvedCells = [];\n    for (let row = 0; row <= 6; row = row + 3) {\n        for (let col = 0; col <= 6; col = col + 3) {\n            const cell = crosshatchNonet(grid, row, col);\n            if (cell !== undefined) {\n                solvedCells.push(cell);\n            }\n        }\n    }\n    const updatedGrid = updateGrid(grid, solvedCells);\n\n    return setCandidates(updatedGrid);\n}\n\nfunction getCandidates(grid, row, column) {\n\n    const allValues = Array.from(new Set(getNonetValues(grid, row, column).concat(getRowValues(grid, row)).concat(getColumnValues(grid, column)))).filter(function(value) {\n        return typeof value === 'number' || (Array.isArray(value) && value.length !== 0);\n    });\n\n    let startingCandidates;\n\n    if (isCleanValue(grid[row][column])) {\n        startingCandidates = [1,2,3,4,5,6,7,8,9];\n    } else {\n        startingCandidates = grid[row][column];\n    }\n    \n    const candidates = startingCandidates.filter(function(value) {\n        return !(allValues.includes(value));\n    });\n\n    return candidates;\n\n}\n\n/*\nnaked triple\nthree cells in a block, row, or column having only the same three candidates, or their subset\nall other appearances of the same candidates can be eliminated if they are in the same block, row, or column\n[[6,8], [4,6], [4,8], ...cells w/candidates...]\n\nnaked quad\nfour cells in a block, row, or column having only the same four candidates, or their subset\nall other appearances of the same candidates can be eliminated if they are in the same block, row, or column\n[[2,8], [6,8], [2,6,8,9], [6,8,9], ...cells w/candidates...]\n\n*/\n\nfunction findNakeds(quantity, unitValues) {\n\n    let tempUnitValues = unitValues.slice(0);\n    let cellsWithSameCandidates = 0;\n    let result = [];\n\n    function findNakedsStep(arrayOfValues) {\n\n        const cellsWithCandidates = arrayOfValues.filter(function(value) {\n            return Array.isArray(value);\n        });\n        let lastGoodValue = [];\n        let cellsToExcludeCount = 0;\n        cellsWithSameCandidates = 0;\n\n        result = arrayOfValues.reduce(function(accumulator, currentValue, currentIndex) {\n\n            if (Array.isArray(currentValue)) {\n\n                const combined = Array.from(new Set(accumulator.concat(currentValue)));\n\n                if (combined.length > quantity) {\n                    cellsToExcludeCount++;\n                    cellsWithSameCandidates = cellsWithCandidates.length - cellsToExcludeCount;\n                    return lastGoodValue;\n                } else {\n                    cellsWithSameCandidates = cellsWithCandidates.length - cellsToExcludeCount;\n                    lastGoodValue = combined;\n                    return combined;\n                }\n\n            } else {\n                return accumulator;\n            }\n\n        }, []);\n\n    }\n\n    while (tempUnitValues.length > 0) {\n        if (cellsWithSameCandidates === quantity && result.length === quantity) {\n            return result;\n        } else {\n            findNakedsStep(tempUnitValues);\n            tempUnitValues.shift();\n        }\n    }\n\n}\n\nfunction removeNakedsFromUnit(nakeds, unitValues, unitIndexes, unitType) {\n\n    const results = [];\n\n    if (nakeds) {\n        unitValues.forEach(function(cellValue, index) {\n            if (Array.isArray(cellValue)) {\n                const differentCandidates = cellValue.filter(function(value) {\n                    return !nakeds.includes(value);\n                });\n                //differentCandidates.filter(candidate => nakeds.includes(candidate));\n                if (differentCandidates.length !== 0 && !_.isEqual(differentCandidates, cellValue)) {\n                    if (unitType === 'row') {\n                        results.push({\n                            row: unitIndexes.row,\n                            column: index,\n                            value: differentCandidates\n                        });\n                    }\n                    if (unitType === 'column') {\n                        results.push({\n                            row: index,\n                            column: unitIndexes.column,\n                            value: differentCandidates\n                        });\n                    }\n                    if (unitType === 'nonet') {\n                        const gridCell = nonetValuesArrayIndexToGridCell(index, unitIndexes.row, unitIndexes.column);\n                        results.push({\n                            row: gridCell[0],\n                            column: gridCell[1],\n                            value: differentCandidates\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    if (results.length !== 0) {\n        return results;\n    }\n\n}\n\nfunction removeNakeds(grid) {\n\n    const results = [];\n    const gridClone = _.cloneDeep(grid);\n\n    gridClone.forEach(function(rowValues, rowIndex) {\n        const removeNakeds3 = removeNakedsFromUnit(findNakeds(3, rowValues), rowValues, { 'row': rowIndex }, 'row');\n        const removeNakeds4 = removeNakedsFromUnit(findNakeds(4, rowValues), rowValues, { 'row': rowIndex }, 'row');\n\n        if (removeNakeds3 !== undefined) {\n            results.push(...removeNakeds3);\n            removeNakeds3.forEach(function(updatedCell) {\n                gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n            });\n        }\n        if (removeNakeds4 !== undefined) {\n            results.push(...removeNakeds4);\n            removeNakeds4.forEach(function(updatedCell) {\n                gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n            });\n        }\n\n    });\n\n    gridClone[0].forEach(function(column, columnIndex) {\n        const columnValues = getColumnValues(gridClone, columnIndex);\n        const removeNakeds3 = removeNakedsFromUnit(findNakeds(3, columnValues), columnValues, { 'column': columnIndex }, 'column');\n        const removeNakeds4 = removeNakedsFromUnit(findNakeds(4, columnValues), columnValues, { 'column': columnIndex }, 'column');\n\n        if (removeNakeds3 !== undefined) {\n            results.push(...removeNakeds3);\n            removeNakeds3.forEach(function(updatedCell) {\n                gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n            });\n        }\n        if (removeNakeds4 !== undefined) {\n            results.push(...removeNakeds4);\n            removeNakeds4.forEach(function(updatedCell) {\n                gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n            });\n        }\n    });\n\n    for (let rowIndex = 0; rowIndex <= 6; rowIndex = rowIndex + 3) {\n        for (let columnIndex = 0; columnIndex <= 6; columnIndex = columnIndex + 3) {\n            const nonetValues = getNonetValues(gridClone, rowIndex, columnIndex);\n            const removeNakeds3 = removeNakedsFromUnit(findNakeds(3, nonetValues), nonetValues, { 'row': rowIndex,'column': columnIndex }, 'nonet');\n            const removeNakeds4 = removeNakedsFromUnit(findNakeds(4, nonetValues), nonetValues, { 'row': rowIndex, 'column': columnIndex }, 'nonet');\n\n            if (removeNakeds3 !== undefined) {\n                results.push(...removeNakeds3);\n                removeNakeds3.forEach(function(updatedCell) {\n                    gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n                });\n            }\n            if (removeNakeds4 !== undefined) {\n                results.push(...removeNakeds4);\n                removeNakeds4.forEach(function(updatedCell) {\n                    gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n                });\n            }\n        }\n    }\n\n    return updateGrid(grid, results);\n\n}\n\n/*\nx-wing\nCandidate appears twice in two different rows (or columns), and those appearances are both in the same column (or row). The candidate appears in four cells that form a square or rectangle. The candidate can only appear in two of the four cells. The two positions have to be diagonal opposites forming an X (hence the name). Safe to eliminate the candidate from other appearances in the cross axis. For example, if the candidate appears twice in two different rows, remove the candidate from the cells of the shared columns.\n*/\n\nfunction findXWings(grid) {\n\n    let xWings = [];\n\n    function examineUnit(unitValues, unitIndex, mainAxis) {\n\n        let candidatesExamined = [];\n        let unitResults = [];\n\n        unitValues.forEach(function(cellValue, cellIndex) {\n            if (Array.isArray(cellValue)) {\n                cellValue.forEach(function(candidateValue) {\n\n                    let count = 0;\n                    let candidatePositions = [];\n\n                    unitValues.forEach(function(cellValueForComparison, cellIndexForComparison) {\n                        if (Array.isArray(cellValueForComparison)) {\n                            if (cellIndexForComparison > cellIndex) {\n                                if (!candidatesExamined.includes(candidateValue)) {\n\n                                    if (cellValueForComparison.includes(candidateValue)) {\n                                        count++;\n\n                                        if (mainAxis === 'row') {\n                                            candidatePositions.push([unitIndex, cellIndex]);\n                                            candidatePositions.push([unitIndex, cellIndexForComparison]);\n                                        }\n                                        if (mainAxis === 'column') {\n                                            candidatePositions.push([cellIndex, unitIndex]);\n                                            candidatePositions.push([cellIndexForComparison, unitIndex]);\n                                        }\n\n                                    }\n                                }\n                            }\n                        }\n                    });\n                    if (count === 1) {\n                        unitResults.push({\n                            'axis': mainAxis,\n                            'positions': candidatePositions,\n                            'value': candidateValue\n                        });\n                    }\n                    candidatesExamined.push(candidateValue);\n                });\n            }\n        });\n\n        unitResults.forEach(function(candidateCellPair) {\n            // look for same candidate value in the same cross axis units (rows or columns)\n\n            function findOtherCandidatePair(unit, unitIndex) {\n\n                let candidatePairUnitIndex;\n                let cellACrossAxisIndex;\n                let cellBCrossAxisIndex;\n                let cellAValue;\n                let cellBValue;\n\n                if (mainAxis === 'row') {\n                    candidatePairUnitIndex = candidateCellPair.positions[0][0];\n                    cellACrossAxisIndex = candidateCellPair.positions[0][1];\n                    cellBCrossAxisIndex = candidateCellPair.positions[1][1];\n                }\n                if (mainAxis === 'column') {\n                    candidatePairUnitIndex = candidateCellPair.positions[0][1];\n                    cellACrossAxisIndex = candidateCellPair.positions[0][0];\n                    cellBCrossAxisIndex = candidateCellPair.positions[1][0];\n                }\n\n                cellAValue = unit[cellACrossAxisIndex];\n                cellBValue = unit[cellBCrossAxisIndex];\n\n                let count = 0;\n                let newCandidatePositions = [];\n\n                if (unitIndex > candidatePairUnitIndex) {\n                    if (Array.isArray(cellAValue) && Array.isArray(cellBValue)) {\n                        if (cellAValue.includes(candidateCellPair.value) && cellBValue.includes(candidateCellPair.value)) {\n\n                            unit.forEach(function(cellValue) {\n                                if (Array.isArray(cellValue)) {\n                                    if (cellValue.includes(candidateCellPair.value)) {\n                                        count++;\n                                    }\n                                }\n                            });\n\n                            if (count === 2) {\n\n                                if (mainAxis === 'row') {\n                                    newCandidatePositions.push([unitIndex, cellACrossAxisIndex]);\n                                    newCandidatePositions.push([unitIndex, cellBCrossAxisIndex]);\n                                }\n                                if (mainAxis === 'column') {\n                                    newCandidatePositions.push([cellACrossAxisIndex, unitIndex]);\n                                    newCandidatePositions.push([cellBCrossAxisIndex, unitIndex]);\n                                }\n\n                                const fourPositionsOfCandidate = candidateCellPair.positions.concat(newCandidatePositions);\n\n                                xWings.push({\n                                    'axis': candidateCellPair.axis,\n                                    'positions': fourPositionsOfCandidate,\n                                    'value': candidateCellPair.value\n                                });\n\n                            }\n\n                        }\n                    }\n                }\n\n            }\n\n            if (mainAxis === 'row') {\n\n                grid.forEach(function(unit, unitIndex) {\n                    findOtherCandidatePair(unit, unitIndex);\n                });\n\n            }\n            if (mainAxis === 'column') {\n\n                grid[0].forEach(function(unit, unitIndex) {\n                    const unitValues = getColumnValues(grid, unitIndex);\n                    findOtherCandidatePair(unitValues, unitIndex);\n                });\n\n            }\n\n        });\n\n    }\n\n    function getColumnValues(grid, column) {\n        let columnValues = [];\n        grid.forEach(function(row) {\n            columnValues.push(row[column]);\n        });\n        return columnValues;\n    }\n\n    // Check rows\n    grid.forEach(function(row, index) {\n        examineUnit(row, index, 'row');\n    });\n\n    // Check columns\n    grid[0].forEach(function(column, index) {\n        examineUnit(getColumnValues(grid, index), index, 'column');\n    });\n\n    return xWings;\n\n}\n\nfunction reduceCandidatesXWing(grid) {\n\n    const gridClone = _.cloneDeep(grid);\n    const xWings = findXWings(gridClone);\n    const results = [];\n\n    xWings.forEach(function(xWing) {\n\n        let xWingRows = xWing.positions.map(function(position) {\n            return position[0];\n        });\n        xWingRows = xWingRows.filter(function(rowPosition, index) {\n            return xWingRows.indexOf(rowPosition) === index;\n        });\n\n        let xWingColumns = xWing.positions.map(function(position) {\n            return position[1];\n        });\n        xWingColumns = xWingColumns.filter(function(columnPosition, index) {\n            return xWingColumns.indexOf(columnPosition) === index;\n        });\n\n        if (xWing.axis === 'column') {\n\n            xWingRows.forEach(function(xWingRow) {\n                const rowValues = getRowValues(gridClone, xWingRow);\n                rowValues.forEach(function(cellValue, index) {\n                    if (!xWingColumns.includes(index)) {\n                        if (Array.isArray(cellValue)) {\n                            const candidatesToRemove = removeCandidateFromCell(gridClone, xWingRow, index, xWing.value);\n                            if (candidatesToRemove !== undefined) {\n                                results.push(candidatesToRemove);\n                                gridClone[candidatesToRemove.row][candidatesToRemove.column] = candidatesToRemove.value;\n                            }\n                        }\n                    }\n                });\n            });\n            \n        }\n\n        if (xWing.axis === 'row') {\n\n            xWingColumns.forEach(function(xWingColumn) {\n                const columnValues = getColumnValues(gridClone, xWingColumn);\n                columnValues.forEach(function(cellValue, index) {\n                    if (!xWingRows.includes(index)) {\n                        if (Array.isArray(cellValue)) {\n                            const candidatesToRemove = removeCandidateFromCell(gridClone, index, xWingColumn, xWing.value);\n                            if (candidatesToRemove !== undefined) {\n                                results.push(candidatesToRemove);\n                                gridClone[candidatesToRemove.row][candidatesToRemove.column] = candidatesToRemove.value;\n                            }\n                        }\n                    }\n                });\n            });\n            \n        }\n\n    });\n\n    return updateGrid(grid, results);\n\n}\n\nfunction removeCandidateFromCell(grid, row, column, value) {\n    const cellValue = getCellValue(grid, row, column);\n\n    if (Array.isArray(cellValue) && cellValue.includes(value)) {\n        const cellValueResult = cellValue.filter(function(candidate) {\n            return candidate !== value;\n        });\n        //controller.updateCell(row, column, cellValueResult);\n        return {\n            row: row,\n            column: column,\n            value: cellValueResult\n        };\n    }\n}\n\nfunction initReduceCandidates(grid) {\n    const results = [];\n    const gridClone = _.cloneDeep(grid);\n\n    for (let row = 0; row <= 6; row = row + 3) {\n        for (let col = 0; col <= 6; col = col + 3) {\n            const reducedCandidatesRow = reduceCandidates(gridClone, row, col, 'row');\n            const reducedCandidatesColumn = reduceCandidates(gridClone, row, col, 'column');\n            if (reducedCandidatesRow !== undefined) {\n                results.push(...reducedCandidatesRow);\n                reducedCandidatesRow.forEach(function(updatedCell) {\n                    gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n                });\n            }\n            if (reducedCandidatesColumn !== undefined) {\n                results.push(...reducedCandidatesColumn);\n                reducedCandidatesColumn.forEach(function(updatedCell) {\n                    gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n                });\n            }\n        }\n    }\n    return updateGrid(grid, results);\n}\n\nfunction reduceCandidates(grid, row, column, direction) {\n\n    // row and column = the nonet's top left cell, for example 0,0 and 0,3 and 3,6, etc.\n    // if direction = row, main axis = row, cross axis = column\n    // if direction = column, main axis = column, cross axis = row\n\n    // If a nonet has candidates that only exist in a row or column within the nonet, remove those candidates from other cells in the same row or column outside the nonet.\n    // For example: [6, 8, 3, [1,2], [1,2], 9, 7, 4, 5] <- nonetValues; 1s and 2s in the same row\n    // For example: [9, 6, [1,4,5], 7, 3, [1,4,5], [1,5], 2, 8] <- nonetValues; 4s in the same column\n\n    const nonetValues = getNonetValues(grid, row, column);\n    const results = [];\n\n    const nonetMainAxisSet1 = nonetValues.filter(function(value, index) {\n        if (direction === 'row') {\n            return index <= 2;\n        } else {\n            // direction === 'column'\n            return index === 0 || index === 3 || index === 6;\n        }\n    }).filter(function(value) {\n        return Array.isArray(value);\n    });\n\n    const nonetMainAxisSet2 = nonetValues.filter(function(value, index) {\n        if (direction === 'row') {\n            return index >=3 && index <=5;\n        } else {\n            // direction === 'column'\n            return index === 1 || index === 4 || index === 7;\n        }\n    }).filter(function(value) {\n        return Array.isArray(value);\n    });\n\n    const nonetMainAxisSet3 = nonetValues.filter(function(value, index) {\n        if (direction === 'row') {\n            return index >= 6;\n        } else {\n            // direction === 'column'\n            return index === 2 || index === 5 || index === 8;\n        }\n    }).filter(function(value) {\n        return Array.isArray(value);\n    });\n\n    const nonetMainAxisSets = [nonetMainAxisSet1, nonetMainAxisSet2, nonetMainAxisSet3];\n    let allCandidatesInCrossAxisSets = [];\n\n    nonetMainAxisSets.forEach(function(nonetMainAxisSet) {\n        if (nonetMainAxisSet.length === 0) {\n            allCandidatesInCrossAxisSets.push([]);\n        } else {\n            let allCandidatesInMainAxisSet = nonetMainAxisSet.reduce(function(accumulator, current) {\n                return accumulator.concat(current);\n            }, []);\n            allCandidatesInMainAxisSet = Array.from(new Set(allCandidatesInMainAxisSet));\n            allCandidatesInCrossAxisSets.push(allCandidatesInMainAxisSet);\n        }\n    });\n\n    allCandidatesInCrossAxisSets.forEach(function(allCandidatesInMainAxisSet, index) {\n\n        let otherMainAxisSet1;\n        let otherMainAxisSet2;\n\n        if (index === 0) {\n            otherMainAxisSet1 = index + 1;\n            otherMainAxisSet2 = index + 2;\n        }\n        if (index === 1) {\n            otherMainAxisSet1 = index - 1;\n            otherMainAxisSet2 = index + 1;\n        }\n        if (index === 2) {\n            otherMainAxisSet1 = index - 2;\n            otherMainAxisSet2 = index - 1;\n        }\n\n        const allCandidatesUniqueToMainAxisSet = allCandidatesInMainAxisSet.filter(function(value) {\n            const otherNonetMainAxisSetsValues = nonetMainAxisSets[otherMainAxisSet1].concat(nonetMainAxisSets[otherMainAxisSet2]).reduce(function(accumulator, current) {\n                return accumulator.concat(current);\n            }, []);\n            return !otherNonetMainAxisSetsValues.includes(value);\n        });\n\n        let gridMainAxisSetIndex;\n        let gridMainAxisSetValues;\n        let indexesToInclude;\n\n        if (direction === 'row') {\n            gridMainAxisSetIndex = row + index;\n            gridMainAxisSetValues = getRowValues(grid, gridMainAxisSetIndex);\n\n            if (column === 0) {\n                indexesToInclude = [3, 4, 5, 6, 7, 8];\n            }\n            if (column === 3) {\n                indexesToInclude = [0, 1, 2, 6, 7, 8];\n            }\n            if (column === 6) {\n                indexesToInclude = [0, 1, 2, 3, 4, 5];\n            }\n        }\n        if (direction === 'column') {\n            gridMainAxisSetIndex = column + index;\n            gridMainAxisSetValues = getColumnValues(grid, gridMainAxisSetIndex);\n\n            if (row === 0) {\n                indexesToInclude = [3, 4, 5, 6, 7, 8];\n            }\n            if (row === 3) {\n                indexesToInclude = [0, 1, 2, 6, 7, 8];\n            }\n            if (row === 6) {\n                indexesToInclude = [0, 1, 2, 3, 4, 5];\n            }\n        }\n\n        gridMainAxisSetValues.forEach(function(cellValue, gridCrossAxisSetIndex) {\n            if (indexesToInclude.includes(gridCrossAxisSetIndex)) {\n                if (Array.isArray(cellValue) && cellValue.length > 1) {\n                    const newCandidates = cellValue.filter(function(value) {\n                        return !allCandidatesUniqueToMainAxisSet.includes(value);\n                    });\n                    if (direction === 'row') {\n                        if (newCandidates.length < cellValue.length) {\n                            results.push({\n                                row: gridMainAxisSetIndex,\n                                column: gridCrossAxisSetIndex,\n                                value: newCandidates\n                            });\n                        }\n                    }\n                    if (direction === 'column') {\n                        if (newCandidates.length < cellValue.length) {\n                            results.push({\n                                row: gridCrossAxisSetIndex,\n                                column: gridMainAxisSetIndex,\n                                value: newCandidates\n                            });\n                        }\n                    }\n                    \n                }\n            }\n        });\n\n    });\n\n    if (results.length !== 0) {\n        return results;\n    }\n\n}\n\nfunction solveCell(grid, row, column) {\n\n    if (!(isCellSolved(grid, row, column))) {\n\n        const candidates = getCandidates(grid, row, column);\n        let newCandidates = [];\n\n        // if a single candidate works, store that value\n        if (Array.isArray(candidates) && candidates.length === 1) {    \n            return {\n                row: row,\n                column: column,\n                value: candidates[0]\n            };\n        }\n\n        const rowArrayValues = getRowValues(grid, row).filter(function(value, index) {\n            return index !== column;\n        }).filter(function(value) {\n            return Array.isArray(value) && value.length !== 0;\n        });\n\n        const columnArrayValues = getColumnValues(grid, column).filter(function(value, index) {\n            return index !== row;\n        }).filter(function(value) {\n            return Array.isArray(value) && value.length !== 0;\n        });\n\n        if (rowArrayValues.length && Array.isArray(candidates)) {\n            // if one of the candidates doesn't exist in any rowArrayValues,\n            // add that value to newCandidates array\n            candidates.forEach(function(candidate) {\n                \n                const candidateInSomeArray = rowArrayValues.some(function(arrayValue) {\n                    return arrayValue.includes(candidate);\n                });\n\n                if (candidateInSomeArray) {\n                    // do nothing, the candidate exists as a candidate for another cell in the same row\n                } else {\n                    newCandidates.push(candidate);\n                }\n                \n            });\n        }\n\n        if (columnArrayValues.length && Array.isArray(candidates)) {\n            // if one of the candidates doesn't exist in any columnArrayValues,\n            // add that value to newCandidates array\n            candidates.forEach(function(candidate) {\n                \n                const candidateInSomeArray = columnArrayValues.some(function(arrayValue) {\n                    return arrayValue.includes(candidate);\n                });\n\n                if (candidateInSomeArray) {\n                    // do nothing, the candidate exists as a candidate for another cell in the same column\n                } else {\n                    newCandidates.push(candidate);\n                }\n                \n            });\n        }\n\n        newCandidates = Array.from(new Set(newCandidates));\n\n        if (newCandidates.length === 1) {\n            return {\n                row: row,\n                column: column,\n                value: newCandidates[0]\n            };\n        }\n        if (newCandidates.length > 1) {\n            return {\n                row: row,\n                column: column,\n                value: newCandidates\n            };\n        }\n        \n    } // end if\n\n}\n\nfunction setCandidates(grid) {\n    const cellsWithCandidates = [];\n    grid.forEach(function(row, i) {\n        row.forEach(function(column, j) {\n            if (!(isCellSolved(grid, i, j))) {\n                const cellValue = getCandidates(grid, i, j);\n                if (cellValue !== undefined) {\n                    cellsWithCandidates.push({\n                        row: i,\n                        column: j,\n                        value: cellValue\n                    });\n                }\n            }\n        });\n    });\n    return updateGrid(grid, cellsWithCandidates);\n}\n\nfunction solveCells(grid) {\n    const solvedCells = [];\n    grid.forEach(function(row, i) {\n        row.forEach(function(column, j) {\n            if (!(isCellSolved(grid, i, j))) {\n                const cell = solveCell(grid, i, j);\n                if (cell !== undefined) {\n                    solvedCells.push(cell);\n                }\n            }\n        });\n    });\n    const updatedGrid = updateGrid(grid, solvedCells);\n\n    return setCandidates(updatedGrid);\n}\n\nfunction verifyCompletedGrid(grid) {\n    const gridColumns = [];\n    const gridNonets = [];\n\n    // Check rows\n    const allRowsIncludeAllValues = grid.every(function(row) {\n        return row.every(function(value) {\n            return [1,2,3,4,5,6,7,8,9].includes(value);\n        });\n    });\n\n    // Check columns\n    grid[0].forEach(function(column, index) {\n        gridColumns.push(getColumnValues(grid, index));\n    });\n\n    const allColumnsIncludeAllValues = gridColumns.every(function(column) {\n        return column.every(function(value) {\n            return [1,2,3,4,5,6,7,8,9].includes(value);\n        });\n    });\n\n    // Check nonets\n    for (let row = 0; row <= 6; row = row + 3) {\n        for (let col = 0; col <= 6; col = col + 3) {\n            gridNonets.push(getNonetValues(grid, row, col));\n        }\n    }\n\n    const allNonetsIncludeAllValues = gridNonets.every(function(nonet) {\n        return nonet.every(function(value) {\n            return [1,2,3,4,5,6,7,8,9].includes(value);\n        });\n    });\n\n    if (allRowsIncludeAllValues && allColumnsIncludeAllValues && allNonetsIncludeAllValues) {\n        return true;\n    }\n\n}\n\nexport { setCandidates, solveCells, solveNonets, removeNakeds, reduceCandidatesXWing, initReduceCandidates, verifyCompletedGrid, getGridNextAnswers, getGridAnswers, getDiffOfCompletedCells };\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Grid from './Grid';\nimport History from './History';\nimport games from './games';\nimport { setCandidates, solveCells, solveNonets, removeNakeds, reduceCandidatesXWing, initReduceCandidates, verifyCompletedGrid, getGridAnswers, getGridNextAnswers, getDiffOfCompletedCells } from './logic';\nimport _ from 'lodash';\n\nfunction App() {\n\n    function generateEmptyBoard() {\n        return [[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]]];\n    }\n\n    const [history, setHistory] = useState(\n        JSON.parse(localStorage.getItem('sudokuHistory')) || [{\n            grid: generateEmptyBoard()\n        }]\n    );\n\n    const [stepNumber, setStepNumber] = useState(\n        Number(localStorage.getItem('sudokuStepNumber')) || 0\n    );\n\n    const [isInGameMode, setIsInGameMode] = useState(true);\n\n    const [showCandidates, setShowCandidates] = useState(\n        localStorage.getItem('sudokuShowCandidates')\n        ? JSON.parse(localStorage.getItem('sudokuShowCandidates'))\n        : false\n    );\n\n    const [highlightGivens, setHighlightGivens] = useState(\n        localStorage.getItem('sudokuHighlightGivens')\n        ? JSON.parse(localStorage.getItem('sudokuHighlightGivens'))\n        : true\n    );\n\n    const [highlightSolvableCells, setHighlightSolvableCells] = useState(\n        localStorage.getItem('sudokuHighlightSolvableCells')\n        ? JSON.parse(localStorage.getItem('sudokuHighlightSolvableCells'))\n        : true\n    );\n\n    const [highlightIncorrectCells, setHighlightIncorrectCells] = useState(\n        localStorage.getItem('sudokuHighlightIncorrectCells')\n        ? JSON.parse(localStorage.getItem('sudokuHighlightIncorrectCells'))\n        : true\n    );\n\n    const prevHistory = _.cloneDeep(history);\n    const addHistory = newHistory => setHistory([...prevHistory, newHistory]);\n    const currentGridValues = history[stepNumber].grid;\n    const nextGridValues = getGridNextAnswers(currentGridValues);\n    const nextPossibleAnswers = getDiffOfCompletedCells(currentGridValues, nextGridValues);\n    let completedGrid = isInGameMode ? getGridAnswers(history[0].grid) : generateEmptyBoard();\n\n    const checkCompletedGridMemoizedCallback = useCallback(\n        (grid) => {\n            if (isGridFull(grid) === true) {\n                if (_.isEqual(grid, completedGrid)) {\n                    if (verifyCompletedGrid(grid) === true) {\n                        alert('Congrats! Sudoku game completed successfully!');\n                    }\n                } else {\n                    alert('Sorry, some numbers aren\\'t where they should be.');\n                }\n            }\n        }, [completedGrid]\n    );\n\n    useEffect(() => {\n        localStorage.setItem('sudokuHistory', JSON.stringify(history));\n        localStorage.setItem('sudokuStepNumber', stepNumber);\n        localStorage.setItem('sudokuShowCandidates', showCandidates);\n        localStorage.setItem('sudokuHighlightGivens', highlightGivens);\n        localStorage.setItem('sudokuHighlightSolvableCells', highlightSolvableCells);\n        localStorage.setItem('sudokuHighlightIncorrectCells', highlightIncorrectCells);\n        checkCompletedGridMemoizedCallback(currentGridValues);\n    }, [history, stepNumber, showCandidates, highlightGivens, highlightSolvableCells, highlightIncorrectCells, checkCompletedGridMemoizedCallback, currentGridValues]);\n    \n    function onValueChange(updatedGrid) {\n        if (isInGameMode) {\n            addHistory({\n                grid: updatedGrid\n            });\n            setStepNumber(history.length);\n        } else {\n            setHistory([{\n                grid: updatedGrid\n            }]);\n        }\n    }\n\n    function updateGame(updatedGrid) {\n        if (!_.isEqual(updatedGrid, currentGridValues)) {\n            addHistory({\n                grid: updatedGrid\n            });\n            setStepNumber(history.length);\n        }\n    }\n\n    function jumpToStepInHistory(step) {\n        setStepNumber(step);\n    }\n\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    function createNewGame(initialGrid) {\n        setHistory([{ grid: setCandidates(initialGrid) }]);\n        setStepNumber(0);\n        setIsInGameMode(true);\n    }\n\n    function isGridFull(currentGridValues) {\n        const currentGridValuesFlat = currentGridValues.flat();\n        return currentGridValuesFlat.every((value) => Number.isInteger(value));\n    }\n\n    return (\n        <div className=\"App\">\n            <Grid\n                values={currentGridValues}\n                onValueChange={onValueChange}\n                givens={history[0].grid}\n                highlightGivens={highlightGivens}\n                highlightSolvableCells={highlightSolvableCells}\n                highlightIncorrectCells={highlightIncorrectCells}\n                showCandidates={showCandidates}\n                nextPossibleAnswers={nextPossibleAnswers}\n                completedGrid={completedGrid}\n                isInGameMode={isInGameMode}\n            />\n            <div className=\"game-panel\">\n                <h2>Controls</h2>\n                <fieldset>\n                    <legend>Generate Game</legend>\n                    <button onClick={() => { createNewGame(games.easy[getRandomInt(games.easy.length)]); }\n                    }>Easy</button>\n                    <button onClick={() => { createNewGame(games.medium[getRandomInt(games.medium.length)]); }\n                    }>Medium</button>\n                    <button onClick={() => { createNewGame(games.hard[getRandomInt(games.hard.length)]); }\n                    }>Hard</button>\n                    <button onClick={() => { createNewGame(games.expert[getRandomInt(games.expert.length)]); }\n                    }>Expert</button>\n                </fieldset>\n                <fieldset>\n                    <legend>Get Help Solving</legend>\n                    <button onClick={ () => {\n                        updateGame(solveCells(currentGridValues));\n                    }}>Solve Cells</button>\n                    <button onClick={ () => {\n                        updateGame(solveNonets(currentGridValues));\n                    }}>Solve Nonets</button>\n                    <button onClick={ () => {\n                        updateGame(removeNakeds(currentGridValues));\n                    }}>Nakeds</button>\n                    <button onClick={ () => {\n                        updateGame(reduceCandidatesXWing(currentGridValues));\n                    }}>X-Wings</button>\n                    <button onClick={ () => {\n                        updateGame(initReduceCandidates(currentGridValues));\n                    }}>Reduce Candidates</button>\n                    <button onClick={ () => {\n                        updateGame(completedGrid);\n                    }}>Solve Grid</button>\n                </fieldset>\n                <button onClick={ () => {\n                    setHistory([{ grid: generateEmptyBoard() }]);\n                    setStepNumber(0);\n                    setIsInGameMode(false);\n                } }>Create Custom Game</button>\n\n                <button onClick={ () => { createNewGame(currentGridValues); }\n                }>Start Game</button>\n\n                <h2>Settings</h2>\n\n                <div className=\"checkbox-group\">\n                    <input type=\"checkbox\" id=\"show-candidates\" name=\"show-candidates\" checked={showCandidates} onChange={ (e) => { \n                        setShowCandidates(e.target.checked);\n                    }} />\n                    <label htmlFor=\"show-candidates\">Show Candidates</label>\n                </div>\n                <div className=\"checkbox-group\">\n                    <input type=\"checkbox\" id=\"highlight-givens\" name=\"highlight-givens\" checked={highlightGivens} onChange={ (e) => { \n                        setHighlightGivens(e.target.checked);\n                    }} />\n                    <label htmlFor=\"highlight-givens\">Highlight Givens</label>\n                </div>\n                <div className=\"checkbox-group\">\n                    <input type=\"checkbox\" id=\"highlight-solvable\" name=\"highlight-solvable\" checked={highlightSolvableCells} onChange={ (e) => { \n                        setHighlightSolvableCells(e.target.checked);\n                    }} />\n                    <label htmlFor=\"highlight-solvable\">Highlight Solvable Cells</label>\n                </div>\n                <div className=\"checkbox-group\">\n                    <input type=\"checkbox\" id=\"highlight-incorrect-cells\" name=\"highlight-incorrect-cells\" checked={highlightIncorrectCells} onChange={ (e) => { \n                        setHighlightIncorrectCells(e.target.checked);\n                    }} />\n                    <label htmlFor=\"highlight-incorrect-cells\">Highlight Incorrect Cells</label>\n                </div>\n\n            </div>\n            <History history={history} jumpToStepInHistory={jumpToStepInHistory} currentStep={stepNumber} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}