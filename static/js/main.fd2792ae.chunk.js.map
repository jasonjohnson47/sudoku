{"version":3,"sources":["Cell.js","NumberPad.js","logic.js","Grid.js","games.js","NewGamePanel.js","GameSettingsPanel.js","History.js","App.js","index.js"],"names":["Cell","props","row","column","value","isGiven","canBeSolved","isIncorrect","handleChange","handleClick","handleKeyDown","inputAttrs","cellDivClassName","Array","isArray","disabled","candidates","map","i","includes","key","id","className","type","maxLength","pattern","inputMode","onChange","e","onClick","onKeyDown","NumberPad","forwardRef","ref","useState","isActive","setIsActive","numberPadWidth","setNumberPadWidth","top","bottom","left","right","numberPadStyle","setNumberPadStyle","activeCell","cellClicked","parentElement","numberPadRef","useRef","showNumberPad","hideNumberPad","useImperativeHandle","useEffect","grid","document","getElementById","current","contains","target","handleEscapeKey","offsetWidth","numberPad","gridTop","getBoundingClientRect","body","scrollTop","numberPadBottom","offsetHeight","offsetTop","numberPadLeft","offsetLeft","numberPadRight","windowHeight","documentElement","clientHeight","windowWidth","clientWidth","positionStyles","getNumberPadPosition","addEventListener","removeEventListener","clearButton","solveButton","style","numberButtons","push","createNumberButtons","querySelector","classList","getGridNextAnswers","solvedCells","forEach","j","isCellSolved","cell","getCandidates","newCandidates","length","rowArrayValues","getRowValues","filter","index","columnArrayValues","getColumnValues","candidate","some","arrayValue","from","Set","solveCell","undefined","setCandidates","updateGrid","solveCells","col","crosshatchNonet","solveNonets","gridClone","_","cloneDeep","xWings","examineUnit","unitValues","unitIndex","mainAxis","candidatesExamined","unitResults","cellValue","cellIndex","candidateValue","count","candidatePositions","cellValueForComparison","cellIndexForComparison","candidateCellPair","findOtherCandidatePair","unit","candidatePairUnitIndex","cellACrossAxisIndex","cellBCrossAxisIndex","cellAValue","cellBValue","positions","newCandidatePositions","fourPositionsOfCandidate","concat","axis","columnValues","findXWings","results","xWing","xWingRows","position","rowPosition","indexOf","xWingColumns","columnPosition","xWingRow","candidatesToRemove","removeCandidateFromCell","xWingColumn","reduceCandidatesXWing","rowValues","rowIndex","removeNakeds3","removeNakedsFromUnit","findNakeds","removeNakeds4","updatedCell","columnIndex","nonetValues","getNonetValues","removeNakeds","reducedCandidatesRow","reduceCandidates","reducedCandidatesColumn","initReduceCandidates","updatedCells","updatedGrid","generateNonet","topLeftCellRow","topLeftCellCol","nonet","getNonetRowsCols","rowOrCol","rowOrCol1","rowOrCol2","rowOrCol3","nonetRows","nonetColumns","temporaryNonetValues","nonetRowValues","nonetColumnValues","emptyCount","gridCell","nonetValuesArrayIndexToGridCell","nonetValuesIndex","nonetTopLeftSqRow","nonetTopLeftSqCol","gridCellRow","gridCellCol","allValues","quantity","tempUnitValues","slice","cellsWithSameCandidates","result","findNakedsStep","arrayOfValues","cellsWithCandidates","lastGoodValue","cellsToExcludeCount","reduce","accumulator","currentValue","currentIndex","combined","shift","nakeds","unitIndexes","unitType","differentCandidates","isEqual","getCellValue","direction","nonetMainAxisSets","allCandidatesInCrossAxisSets","nonetMainAxisSet","allCandidatesInMainAxisSet","otherMainAxisSet1","otherMainAxisSet2","gridMainAxisSetIndex","gridMainAxisSetValues","indexesToInclude","allCandidatesUniqueToMainAxisSet","gridCrossAxisSetIndex","verifyCompletedGrid","gridColumns","gridNonets","allRowsIncludeAllValues","every","allColumnsIncludeAllValues","allNonetsIncludeAllValues","Grid","currentGridValues","pastGridValues","completedGrid","updateGame","givens","nextPossibleAnswers","showCandidates","highlightGivens","highlightSolvableCells","highlightIncorrectCells","setCellClicked","setActiveCell","handleCellClick","coords","select","newGridValues","RegExp","test","Number","preventDefault","isCorrect","renderCell","isInteger","isInGameMode","gridClassName","createGrid","games","getRandomInt","max","Math","floor","random","NewGamePanel","difficultyLevel","setDifficultyLevel","createNewGame","createCustomGame","toggleMenu","htmlFor","easy","medium","hard","expert","GameSettingsPanel","setShowCandidates","setHighlightGivens","setHighlightSolvableCells","setHighlightIncorrectCells","name","checked","History","currentStep","historyLength","history","previousButtonAttrs","jumpToStepInHistory","nextButtonAttrs","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","App","JSON","parse","localStorage","getItem","setHistory","stepNumber","setStepNumber","setIsInGameMode","menuIsOpen","setMenuIsOpen","currentGrid","prevHistory","nextGridValues","solveGridSteps","solveGrid","console","log","getGridAnswers","checkCompletedGridMemoizedCallback","useCallback","flat","isGridFull","alert","newHistory","initialGrid","setItem","stringify","Dropdown","show","Toggle","variant","Menu","Divider","step","ReactDOM","render","StrictMode"],"mappings":"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E,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IACvO,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,MAE3O,KAAQ,CACJ,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAC1O,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KACzO,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,KACzO,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,KACzO,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,KACxO,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,KACxO,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,KACvO,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,IAC1O,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,KACrO,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,KAEvO,OAAU,CACN,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,KACzO,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,KACzO,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,KAC1O,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,KAC1O,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,KAC1O,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,KACzO,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,IACzO,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,IACxO,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,KACnO,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,KACvO,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,KAC3O,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAC5O,CAAC,CAAC,GAAG,GAAG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","file":"static/js/main.fd2792ae.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Cell(props) {\n\n    const {row, column, value, isGiven, canBeSolved, isIncorrect, handleChange, handleClick, handleKeyDown} = props;\n    const inputAttrs = {};\n    const cellDivClassName = `cell cell-row-${row} cell-column-${column}${ isGiven === true ? ' given' : '' }${ canBeSolved === true ? ' can-be-solved' : '' }${ isIncorrect === true ? ' incorrect' : '' }`;\n\n    // set 'value' attribute for cell input\n    if (Array.isArray(value)) {\n        inputAttrs.value = [];\n    } else {\n        inputAttrs.value = value;\n    }\n\n    // set 'disabled' attribute for cell input, if a 'given' number\n    if (isGiven === true) {\n        inputAttrs.disabled = true;\n    }\n\n    const candidates = [1,2,3,4,5,6,7,8,9].map(function(i) {\n        if (Array.isArray(value) && value.includes(i)) {\n            return <div key={`r${row}c${column}-p${i}`}>{i}</div>\n        } else {\n            return <div key={`r${row}c${column}-p${i}`}></div>\n        }\n    });\n\n    return (\n        <div id={`r${row}c${column}`} className={cellDivClassName}>\n            <input\n                type=\"text\"\n                maxLength=\"1\"\n                pattern=\"[1-9]\"\n                inputMode=\"none\"\n                onChange={(e) => handleChange([row, column], e)}\n                onClick={(e) => handleClick([row, column], e)}\n                onKeyDown={(e) => handleKeyDown([row, column], e)}\n                {...inputAttrs}\n            />\n            {Array.isArray(value) && <div className=\"candidates\">{candidates}</div>}\n        </div>\n    );\n}\n\nexport default Cell;","import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport './NumberPad.css';\n\nfunction getNumberPadPosition(activeCell, numberPad) {\n    const grid = document.getElementById('grid');\n    const gridRect = grid.getBoundingClientRect();\n    const gridTop = gridRect.top + document.body.scrollTop;\n    const cellBottom = activeCell.offsetHeight + activeCell.offsetTop + gridTop;\n    const numberPadBottom = cellBottom + numberPad.offsetHeight;\n    const numberPadWidth = numberPad.offsetWidth;\n    const numberPadLeft = activeCell.offsetLeft + (activeCell.offsetWidth/2) - numberPadWidth/2;\n    const numberPadRight = numberPadLeft + numberPadWidth;\n    const windowHeight = document.documentElement.clientHeight;\n    const windowWidth = document.documentElement.clientWidth;\n\n    const positionStyles = {\n        top: activeCell ? activeCell.offsetTop + activeCell.offsetHeight : 0,\n        bottom: 'auto',\n        left: activeCell ? activeCell.offsetLeft + (activeCell.offsetWidth/2) - numberPadWidth/2 : 0,\n        right: 'auto'\n    };\n\n    if (numberPadBottom > windowHeight) {\n        // bottom of number pad would go offscreen bottom\n        positionStyles.top = 'auto';\n        positionStyles.bottom = grid.offsetHeight - activeCell.offsetTop;\n    }\n\n    if (numberPadLeft < 0) {\n        // left of number pad would go offscreen left\n        positionStyles.left = 0;\n    }\n\n    if (numberPadRight > windowWidth) {\n        // right of number pad would go offscreen right\n        positionStyles.left = 'auto';\n        positionStyles.right = 0;\n    }\n\n    return positionStyles;\n    \n}\n\nconst NumberPad = forwardRef((props, ref) => {\n\n    const [isActive, setIsActive] = useState(false);\n    const [numberPadWidth, setNumberPadWidth] = useState(0);\n    const [numberPadStyle, setNumberPadStyle] = useState({\n        top: '-9999px',\n        bottom: 'auto',\n        left: '-9999px',\n        right:'auto'\n    });\n\n    const activeCell = props.cellClicked ? props.cellClicked.parentElement : null;\n    const numberPadRef = useRef(null);\n\n    const showNumberPad = () => {\n        setIsActive(true);\n    }\n\n    const hideNumberPad = () => {\n        setIsActive(false);\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            showNumberPad: showNumberPad,\n            hideNumberPad: hideNumberPad,\n            isActive: isActive\n        };\n    });\n\n    useEffect(() => {\n\n        const grid = document.getElementById('grid');\n\n        const handleClick = e => {\n            if (numberPadRef.current.contains(e.target) || grid.contains(e.target)) {\n                // inside click\n                return;\n            }\n            // outside click\n            hideNumberPad();\n        };\n        const handleEscapeKey = e => {\n            if (e.key === 'Escape') {\n                hideNumberPad();\n            }\n        };\n\n        if (isActive) {\n            setNumberPadWidth(numberPadRef.current.offsetWidth);\n            setNumberPadStyle(getNumberPadPosition(activeCell, numberPadRef.current));\n        } else {\n            setNumberPadStyle({\n                top: '-9999px',\n                bottom: 'auto',\n                left: '-9999px',\n                right:'auto'\n            });\n        }\n\n        // add event listener for outside click when mounted\n        document.addEventListener('mousedown', handleClick);\n        document.addEventListener('keyup', handleEscapeKey);\n\n        // return functions to be called when unmounted\n        return () => {\n            document.removeEventListener('mousedown', handleClick);\n            document.removeEventListener('keyup', handleEscapeKey);\n        };\n\n    }, [isActive, numberPadWidth, activeCell]);\n\n    function createNumberButtons() {\n        const numberButtons = [];\n    \n        for (let i = 1; i < 10; i++) {\n            numberButtons.push(<button type=\"button\" value={i} key={`numpad-${i}`} onClick={props.handleClick}>{i}</button>);\n        }\n    \n        return numberButtons;\n    }\n\n    const clearButton = (\n        <button\n            type=\"button\"\n            value=\"\"\n            className=\"clear-button\"\n            onClick={props.handleClick}\n        >Clear</button>\n    );\n\n    const solveButton = (\n        <button\n            type=\"button\"\n            value=\"\"\n            className=\"solve-button\"\n            onClick={props.handleClick}\n        >Solve</button>\n    );\n        \n    return (\n        <div\n            className={isActive ? 'number-pad active' : 'number-pad'}\n            style={numberPadStyle}\n            ref={numberPadRef}\n        >\n            {createNumberButtons()}\n            { activeCell && activeCell.querySelector('input').value !== '' ? clearButton : null }\n            { activeCell && activeCell.classList.contains('can-be-solved') ? solveButton : null }\n        </div>\n    );\n\n});\n\nexport default NumberPad;","import _ from 'lodash';\n\nfunction getDiffOfCompletedCells(currentGrid, nextGrid) {\n    const result = nextGrid.map(function(row, i) {\n        const rowValues = row.map(function(value, j) {\n            if (Number.isInteger(value) && currentGrid[i][j] !== value) {\n                return value;\n            } else {\n                return [];\n            }\n        });\n        return rowValues;\n    });\n    return result;\n}\n\nfunction getGridNextAnswers(grid) {\n    return solveCells(solveNonets(reduceCandidatesXWing(removeNakeds(initReduceCandidates(grid)))));\n}\n\nfunction getGridAnswers(grid) {\n    let completedGrid = [];\n    let solveGridSteps = 0;\n\n    function solveGrid(grid) {\n        solveGridSteps++;\n        if (verifyCompletedGrid(grid) === true) {\n            return;\n        } else if (solveGridSteps > 81) {\n            console.log('Cannot solve sudoku puzzle');\n            return;\n        } else {\n            completedGrid = getGridNextAnswers(grid);\n            solveGrid(completedGrid);\n        }\n    }\n    solveGrid(grid);\n    return completedGrid;\n}\n\nfunction updateGrid(grid, updatedCells) {\n    const updatedGrid = _.cloneDeep(grid);\n    updatedCells.forEach(function(cell) {\n        updatedGrid[cell.row][cell.column] = cell.value;\n    });\n    return updatedGrid;\n}\n\nfunction generateNonet(grid, topLeftCellRow, topLeftCellCol) {\n    let nonet = [];\n\n    for (let i = topLeftCellRow; i < topLeftCellRow + 3; i++) {\n        for (let j = topLeftCellCol; j < topLeftCellCol + 3; j++) {\n            nonet.push(grid[i][j]);\n        }\n    }\n\n    return nonet;\n}\n\nfunction getCellValue(grid, row, column) {\n    return grid[row][column];\n}\n\nfunction getRowValues(grid, row) {\n    let rowValues = [];\n    grid[row].forEach(function(value) {\n        rowValues.push(value);\n    });\n    return rowValues;\n}\n\nfunction getColumnValues(grid, column) {\n    let columnValues = [];\n    grid.forEach(function(row) {\n        columnValues.push(row[column]);\n    });\n    return columnValues;\n}\n\nfunction getNonetValues(grid, row, column) {\n\n    // sqr1\n    if (row <= 2 && column <= 2) {\n        return generateNonet(grid, 0,0);\n    }\n\n    // sqr2\n    if (row <= 2 && (column >= 3 && column <= 5)) {\n        return generateNonet(grid, 0,3);\n    }\n\n    // sqr3\n    if (row <= 2 && column >= 6) {\n        return generateNonet(grid, 0,6);\n    }\n\n    // sqr4\n    if ((row >= 3 && row <= 5) && column <= 2) {\n        return generateNonet(grid, 3,0);\n    }\n\n    // sqr5\n    if ((row >= 3 && row <= 5) && (column >= 3 && column <= 5)) {\n        return generateNonet(grid, 3,3);\n    }\n\n    // sqr6\n    if ((row >= 3 && row <= 5) && column >= 6) {\n        return generateNonet(grid, 3,6);\n    }\n\n    // sqr7\n    if (row >= 6 && column <= 2) {\n        return generateNonet(grid, 6,0);\n    }\n\n    // sqr8\n    if (row >= 6 && (column >= 3 && column <= 5)) {\n        return generateNonet(grid, 6,3);\n    }\n\n    // sqr9\n    if (row >= 6 && column >= 6) {\n        return generateNonet(grid, 6,6);\n    }\n}\n\nfunction getNonetRowsCols(rowOrCol) {\n    let rowOrCol1,\n        rowOrCol2,\n        rowOrCol3;\n\n    if (rowOrCol === 0 || rowOrCol === 3 || rowOrCol === 6) {\n        rowOrCol1 = rowOrCol;\n        rowOrCol2 = rowOrCol + 1;\n        rowOrCol3 = rowOrCol + 2;\n    }\n    if (rowOrCol === 1 || rowOrCol === 4 || rowOrCol === 7) {\n        rowOrCol1 = rowOrCol - 1;\n        rowOrCol2 = rowOrCol;\n        rowOrCol3 = rowOrCol + 1;\n    }\n    if (rowOrCol === 2 || rowOrCol === 5 || rowOrCol === 8) {\n        rowOrCol1 = rowOrCol - 2;\n        rowOrCol2 = rowOrCol - 1;\n        rowOrCol3 = rowOrCol;\n    }\n\n    return [rowOrCol1, rowOrCol2, rowOrCol3];\n}\n\nfunction isCellSolved (grid, row, column) {\n    if (typeof grid[row][column] === 'number') {\n        return true;\n    }\n}\n\nfunction isCleanValue(value) {\n    // check if the value is an empty array\n    if (Array.isArray(value) && value.length === 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction crosshatchNonet (grid, row, column) {\n\n    const nonetValues = getNonetValues(grid, row, column);\n    const candidates = [1,2,3,4,5,6,7,8,9].filter(function(value) {\n        return !(nonetValues.includes(value));\n    });\n    let newCandidates = [];\n    const nonetRows = getNonetRowsCols(row);\n    const nonetColumns = getNonetRowsCols(column);\n\n    candidates.forEach(function(candidate) {\n\n        const temporaryNonetValues = nonetValues.map(function(value) {\n            if (Array.isArray(value)) {\n                return \"o\";\n            } else {\n                return value;\n            }\n        });\n\n        temporaryNonetValues.forEach(function(value, index) {\n            let nonetRowValues;\n            let nonetColumnValues;\n\n            if (index <= 2) {\n                nonetRowValues = getRowValues(grid, nonetRows[0]);\n            }\n            if (index >=3 && index <=5) {\n                nonetRowValues = getRowValues(grid, nonetRows[1]);\n            }\n            if (index >= 6) {\n                nonetRowValues = getRowValues(grid, nonetRows[2]);\n            }\n\n            if (index === 0 || index === 3 || index === 6) {\n                nonetColumnValues = getColumnValues(grid, nonetColumns[0]);\n            }\n            if (index === 1 || index === 4 || index === 7) {\n                nonetColumnValues = getColumnValues(grid, nonetColumns[1]);\n            }\n            if (index === 2 || index === 5 || index === 8) {\n                nonetColumnValues = getColumnValues(grid, nonetColumns[2]);\n            }\n\n            if (value === 'o') {\n                if (nonetRowValues.includes(candidate)) {\n                    temporaryNonetValues[index] = 'x';\n                }\n                if (nonetColumnValues.includes(candidate)) {\n                    temporaryNonetValues[index] = 'x';\n                }\n            }\n\n        });\n\n        let emptyCount = 0;\n\n        temporaryNonetValues.forEach(function(value) {\n            if (value === 'o') {\n                emptyCount++;\n            }\n        });\n\n        const gridCell = nonetValuesArrayIndexToGridCell(temporaryNonetValues.indexOf('o'), row, column);\n\n        if (emptyCount === 1) {\n            newCandidates.push([gridCell[0], gridCell[1], candidate]);\n        }\n        \n    });\n\n    if (newCandidates.length === 1) {\n        return {\n            row: newCandidates[0][0],\n            column: newCandidates[0][1],\n            value: newCandidates[0][2]\n        };\n    } \n\n}\n\nfunction nonetValuesArrayIndexToGridCell(nonetValuesIndex, nonetTopLeftSqRow, nonetTopLeftSqCol) {\n    let gridCellRow = nonetTopLeftSqRow;\n    let gridCellCol = nonetTopLeftSqCol;\n\n    if (nonetValuesIndex === 1) {\n        gridCellCol = nonetTopLeftSqCol + 1;\n    }\n    if (nonetValuesIndex === 2) {\n        gridCellCol = nonetTopLeftSqCol + 2;\n    }\n    if (nonetValuesIndex === 3) {\n        gridCellRow = nonetTopLeftSqRow + 1;\n    }\n    if (nonetValuesIndex === 4) {\n        gridCellRow = nonetTopLeftSqRow + 1;\n        gridCellCol = nonetTopLeftSqCol + 1;\n    }\n    if (nonetValuesIndex === 5) {\n        gridCellRow = nonetTopLeftSqRow + 1;\n        gridCellCol = nonetTopLeftSqCol + 2;\n    }\n    if (nonetValuesIndex === 6) {\n        gridCellRow = nonetTopLeftSqRow + 2;\n    }\n    if (nonetValuesIndex === 7) {\n        gridCellRow = nonetTopLeftSqRow + 2;\n        gridCellCol = nonetTopLeftSqCol + 1;\n    }\n    if (nonetValuesIndex === 8) {\n        gridCellRow = nonetTopLeftSqRow + 2;\n        gridCellCol = nonetTopLeftSqCol + 2;\n    }\n\n    return [gridCellRow, gridCellCol];\n}\n\nfunction solveNonets(grid) {\n    const solvedCells = [];\n    for (let row = 0; row <= 6; row = row + 3) {\n        for (let col = 0; col <= 6; col = col + 3) {\n            const cell = crosshatchNonet(grid, row, col);\n            if (cell !== undefined) {\n                solvedCells.push(cell);\n            }\n        }\n    }\n    const updatedGrid = updateGrid(grid, solvedCells);\n\n    return setCandidates(updatedGrid);\n}\n\nfunction getCandidates(grid, row, column) {\n\n    const allValues = Array.from(new Set(getNonetValues(grid, row, column).concat(getRowValues(grid, row)).concat(getColumnValues(grid, column)))).filter(function(value) {\n        return typeof value === 'number' || (Array.isArray(value) && value.length !== 0);\n    });\n\n    let startingCandidates;\n\n    if (isCleanValue(grid[row][column])) {\n        startingCandidates = [1,2,3,4,5,6,7,8,9];\n    } else {\n        startingCandidates = grid[row][column];\n    }\n    \n    const candidates = startingCandidates.filter(function(value) {\n        return !(allValues.includes(value));\n    });\n\n    return candidates;\n\n}\n\n/*\nnaked triple\nthree cells in a block, row, or column having only the same three candidates, or their subset\nall other appearances of the same candidates can be eliminated if they are in the same block, row, or column\n[[6,8], [4,6], [4,8], ...cells w/candidates...]\n\nnaked quad\nfour cells in a block, row, or column having only the same four candidates, or their subset\nall other appearances of the same candidates can be eliminated if they are in the same block, row, or column\n[[2,8], [6,8], [2,6,8,9], [6,8,9], ...cells w/candidates...]\n\n*/\n\nfunction findNakeds(quantity, unitValues) {\n\n    let tempUnitValues = unitValues.slice(0);\n    let cellsWithSameCandidates = 0;\n    let result = [];\n\n    function findNakedsStep(arrayOfValues) {\n\n        const cellsWithCandidates = arrayOfValues.filter(function(value) {\n            return Array.isArray(value);\n        });\n        let lastGoodValue = [];\n        let cellsToExcludeCount = 0;\n        cellsWithSameCandidates = 0;\n\n        result = arrayOfValues.reduce(function(accumulator, currentValue, currentIndex) {\n\n            if (Array.isArray(currentValue)) {\n\n                const combined = Array.from(new Set(accumulator.concat(currentValue)));\n\n                if (combined.length > quantity) {\n                    cellsToExcludeCount++;\n                    cellsWithSameCandidates = cellsWithCandidates.length - cellsToExcludeCount;\n                    return lastGoodValue;\n                } else {\n                    cellsWithSameCandidates = cellsWithCandidates.length - cellsToExcludeCount;\n                    lastGoodValue = combined;\n                    return combined;\n                }\n\n            } else {\n                return accumulator;\n            }\n\n        }, []);\n\n    }\n\n    while (tempUnitValues.length > 0) {\n        if (cellsWithSameCandidates === quantity && result.length === quantity) {\n            return result;\n        } else {\n            findNakedsStep(tempUnitValues);\n            tempUnitValues.shift();\n        }\n    }\n\n}\n\nfunction removeNakedsFromUnit(nakeds, unitValues, unitIndexes, unitType) {\n\n    const results = [];\n\n    if (nakeds) {\n        unitValues.forEach(function(cellValue, index) {\n            if (Array.isArray(cellValue)) {\n                const differentCandidates = cellValue.filter(function(value) {\n                    return !nakeds.includes(value);\n                });\n                //differentCandidates.filter(candidate => nakeds.includes(candidate));\n                if (differentCandidates.length !== 0 && !_.isEqual(differentCandidates, cellValue)) {\n                    if (unitType === 'row') {\n                        results.push({\n                            row: unitIndexes.row,\n                            column: index,\n                            value: differentCandidates\n                        });\n                    }\n                    if (unitType === 'column') {\n                        results.push({\n                            row: index,\n                            column: unitIndexes.column,\n                            value: differentCandidates\n                        });\n                    }\n                    if (unitType === 'nonet') {\n                        const gridCell = nonetValuesArrayIndexToGridCell(index, unitIndexes.row, unitIndexes.column);\n                        results.push({\n                            row: gridCell[0],\n                            column: gridCell[1],\n                            value: differentCandidates\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    if (results.length !== 0) {\n        return results;\n    }\n\n}\n\nfunction removeNakeds(grid) {\n\n    const results = [];\n    const gridClone = _.cloneDeep(grid);\n\n    gridClone.forEach(function(rowValues, rowIndex) {\n        const removeNakeds3 = removeNakedsFromUnit(findNakeds(3, rowValues), rowValues, { 'row': rowIndex }, 'row');\n        const removeNakeds4 = removeNakedsFromUnit(findNakeds(4, rowValues), rowValues, { 'row': rowIndex }, 'row');\n\n        if (removeNakeds3 !== undefined) {\n            results.push(...removeNakeds3);\n            removeNakeds3.forEach(function(updatedCell) {\n                gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n            });\n        }\n        if (removeNakeds4 !== undefined) {\n            results.push(...removeNakeds4);\n            removeNakeds4.forEach(function(updatedCell) {\n                gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n            });\n        }\n\n    });\n\n    gridClone[0].forEach(function(column, columnIndex) {\n        const columnValues = getColumnValues(gridClone, columnIndex);\n        const removeNakeds3 = removeNakedsFromUnit(findNakeds(3, columnValues), columnValues, { 'column': columnIndex }, 'column');\n        const removeNakeds4 = removeNakedsFromUnit(findNakeds(4, columnValues), columnValues, { 'column': columnIndex }, 'column');\n\n        if (removeNakeds3 !== undefined) {\n            results.push(...removeNakeds3);\n            removeNakeds3.forEach(function(updatedCell) {\n                gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n            });\n        }\n        if (removeNakeds4 !== undefined) {\n            results.push(...removeNakeds4);\n            removeNakeds4.forEach(function(updatedCell) {\n                gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n            });\n        }\n    });\n\n    for (let rowIndex = 0; rowIndex <= 6; rowIndex = rowIndex + 3) {\n        for (let columnIndex = 0; columnIndex <= 6; columnIndex = columnIndex + 3) {\n            const nonetValues = getNonetValues(gridClone, rowIndex, columnIndex);\n            const removeNakeds3 = removeNakedsFromUnit(findNakeds(3, nonetValues), nonetValues, { 'row': rowIndex,'column': columnIndex }, 'nonet');\n            const removeNakeds4 = removeNakedsFromUnit(findNakeds(4, nonetValues), nonetValues, { 'row': rowIndex, 'column': columnIndex }, 'nonet');\n\n            if (removeNakeds3 !== undefined) {\n                results.push(...removeNakeds3);\n                removeNakeds3.forEach(function(updatedCell) {\n                    gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n                });\n            }\n            if (removeNakeds4 !== undefined) {\n                results.push(...removeNakeds4);\n                removeNakeds4.forEach(function(updatedCell) {\n                    gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n                });\n            }\n        }\n    }\n\n    return updateGrid(grid, results);\n\n}\n\n/*\nx-wing\nCandidate appears twice in two different rows (or columns), and those appearances are both in the same column (or row). The candidate appears in four cells that form a square or rectangle. The candidate can only appear in two of the four cells. The two positions have to be diagonal opposites forming an X (hence the name). Safe to eliminate the candidate from other appearances in the cross axis. For example, if the candidate appears twice in two different rows, remove the candidate from the cells of the shared columns.\n*/\n\nfunction findXWings(grid) {\n\n    let xWings = [];\n\n    function examineUnit(unitValues, unitIndex, mainAxis) {\n\n        let candidatesExamined = [];\n        let unitResults = [];\n\n        unitValues.forEach(function(cellValue, cellIndex) {\n            if (Array.isArray(cellValue)) {\n                cellValue.forEach(function(candidateValue) {\n\n                    let count = 0;\n                    let candidatePositions = [];\n\n                    unitValues.forEach(function(cellValueForComparison, cellIndexForComparison) {\n                        if (Array.isArray(cellValueForComparison)) {\n                            if (cellIndexForComparison > cellIndex) {\n                                if (!candidatesExamined.includes(candidateValue)) {\n\n                                    if (cellValueForComparison.includes(candidateValue)) {\n                                        count++;\n\n                                        if (mainAxis === 'row') {\n                                            candidatePositions.push([unitIndex, cellIndex]);\n                                            candidatePositions.push([unitIndex, cellIndexForComparison]);\n                                        }\n                                        if (mainAxis === 'column') {\n                                            candidatePositions.push([cellIndex, unitIndex]);\n                                            candidatePositions.push([cellIndexForComparison, unitIndex]);\n                                        }\n\n                                    }\n                                }\n                            }\n                        }\n                    });\n                    if (count === 1) {\n                        unitResults.push({\n                            'axis': mainAxis,\n                            'positions': candidatePositions,\n                            'value': candidateValue\n                        });\n                    }\n                    candidatesExamined.push(candidateValue);\n                });\n            }\n        });\n\n        unitResults.forEach(function(candidateCellPair) {\n            // look for same candidate value in the same cross axis units (rows or columns)\n\n            function findOtherCandidatePair(unit, unitIndex) {\n\n                let candidatePairUnitIndex;\n                let cellACrossAxisIndex;\n                let cellBCrossAxisIndex;\n                let cellAValue;\n                let cellBValue;\n\n                if (mainAxis === 'row') {\n                    candidatePairUnitIndex = candidateCellPair.positions[0][0];\n                    cellACrossAxisIndex = candidateCellPair.positions[0][1];\n                    cellBCrossAxisIndex = candidateCellPair.positions[1][1];\n                }\n                if (mainAxis === 'column') {\n                    candidatePairUnitIndex = candidateCellPair.positions[0][1];\n                    cellACrossAxisIndex = candidateCellPair.positions[0][0];\n                    cellBCrossAxisIndex = candidateCellPair.positions[1][0];\n                }\n\n                cellAValue = unit[cellACrossAxisIndex];\n                cellBValue = unit[cellBCrossAxisIndex];\n\n                let count = 0;\n                let newCandidatePositions = [];\n\n                if (unitIndex > candidatePairUnitIndex) {\n                    if (Array.isArray(cellAValue) && Array.isArray(cellBValue)) {\n                        if (cellAValue.includes(candidateCellPair.value) && cellBValue.includes(candidateCellPair.value)) {\n\n                            unit.forEach(function(cellValue) {\n                                if (Array.isArray(cellValue)) {\n                                    if (cellValue.includes(candidateCellPair.value)) {\n                                        count++;\n                                    }\n                                }\n                            });\n\n                            if (count === 2) {\n\n                                if (mainAxis === 'row') {\n                                    newCandidatePositions.push([unitIndex, cellACrossAxisIndex]);\n                                    newCandidatePositions.push([unitIndex, cellBCrossAxisIndex]);\n                                }\n                                if (mainAxis === 'column') {\n                                    newCandidatePositions.push([cellACrossAxisIndex, unitIndex]);\n                                    newCandidatePositions.push([cellBCrossAxisIndex, unitIndex]);\n                                }\n\n                                const fourPositionsOfCandidate = candidateCellPair.positions.concat(newCandidatePositions);\n\n                                xWings.push({\n                                    'axis': candidateCellPair.axis,\n                                    'positions': fourPositionsOfCandidate,\n                                    'value': candidateCellPair.value\n                                });\n\n                            }\n\n                        }\n                    }\n                }\n\n            }\n\n            if (mainAxis === 'row') {\n\n                grid.forEach(function(unit, unitIndex) {\n                    findOtherCandidatePair(unit, unitIndex);\n                });\n\n            }\n            if (mainAxis === 'column') {\n\n                grid[0].forEach(function(unit, unitIndex) {\n                    const unitValues = getColumnValues(grid, unitIndex);\n                    findOtherCandidatePair(unitValues, unitIndex);\n                });\n\n            }\n\n        });\n\n    }\n\n    function getColumnValues(grid, column) {\n        let columnValues = [];\n        grid.forEach(function(row) {\n            columnValues.push(row[column]);\n        });\n        return columnValues;\n    }\n\n    // Check rows\n    grid.forEach(function(row, index) {\n        examineUnit(row, index, 'row');\n    });\n\n    // Check columns\n    grid[0].forEach(function(column, index) {\n        examineUnit(getColumnValues(grid, index), index, 'column');\n    });\n\n    return xWings;\n\n}\n\nfunction reduceCandidatesXWing(grid) {\n\n    const gridClone = _.cloneDeep(grid);\n    const xWings = findXWings(gridClone);\n    const results = [];\n\n    xWings.forEach(function(xWing) {\n\n        let xWingRows = xWing.positions.map(function(position) {\n            return position[0];\n        });\n        xWingRows = xWingRows.filter(function(rowPosition, index) {\n            return xWingRows.indexOf(rowPosition) === index;\n        });\n\n        let xWingColumns = xWing.positions.map(function(position) {\n            return position[1];\n        });\n        xWingColumns = xWingColumns.filter(function(columnPosition, index) {\n            return xWingColumns.indexOf(columnPosition) === index;\n        });\n\n        if (xWing.axis === 'column') {\n\n            xWingRows.forEach(function(xWingRow) {\n                const rowValues = getRowValues(gridClone, xWingRow);\n                rowValues.forEach(function(cellValue, index) {\n                    if (!xWingColumns.includes(index)) {\n                        if (Array.isArray(cellValue)) {\n                            const candidatesToRemove = removeCandidateFromCell(gridClone, xWingRow, index, xWing.value);\n                            if (candidatesToRemove !== undefined) {\n                                results.push(candidatesToRemove);\n                                gridClone[candidatesToRemove.row][candidatesToRemove.column] = candidatesToRemove.value;\n                            }\n                        }\n                    }\n                });\n            });\n            \n        }\n\n        if (xWing.axis === 'row') {\n\n            xWingColumns.forEach(function(xWingColumn) {\n                const columnValues = getColumnValues(gridClone, xWingColumn);\n                columnValues.forEach(function(cellValue, index) {\n                    if (!xWingRows.includes(index)) {\n                        if (Array.isArray(cellValue)) {\n                            const candidatesToRemove = removeCandidateFromCell(gridClone, index, xWingColumn, xWing.value);\n                            if (candidatesToRemove !== undefined) {\n                                results.push(candidatesToRemove);\n                                gridClone[candidatesToRemove.row][candidatesToRemove.column] = candidatesToRemove.value;\n                            }\n                        }\n                    }\n                });\n            });\n            \n        }\n\n    });\n\n    return updateGrid(grid, results);\n\n}\n\nfunction removeCandidateFromCell(grid, row, column, value) {\n    const cellValue = getCellValue(grid, row, column);\n\n    if (Array.isArray(cellValue) && cellValue.includes(value)) {\n        const cellValueResult = cellValue.filter(function(candidate) {\n            return candidate !== value;\n        });\n        //controller.updateCell(row, column, cellValueResult);\n        return {\n            row: row,\n            column: column,\n            value: cellValueResult\n        };\n    }\n}\n\nfunction initReduceCandidates(grid) {\n    const results = [];\n    const gridClone = _.cloneDeep(grid);\n\n    for (let row = 0; row <= 6; row = row + 3) {\n        for (let col = 0; col <= 6; col = col + 3) {\n            const reducedCandidatesRow = reduceCandidates(gridClone, row, col, 'row');\n            const reducedCandidatesColumn = reduceCandidates(gridClone, row, col, 'column');\n            if (reducedCandidatesRow !== undefined) {\n                results.push(...reducedCandidatesRow);\n                reducedCandidatesRow.forEach(function(updatedCell) {\n                    gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n                });\n            }\n            if (reducedCandidatesColumn !== undefined) {\n                results.push(...reducedCandidatesColumn);\n                reducedCandidatesColumn.forEach(function(updatedCell) {\n                    gridClone[updatedCell.row][updatedCell.column] = updatedCell.value;\n                });\n            }\n        }\n    }\n    return updateGrid(grid, results);\n}\n\nfunction reduceCandidates(grid, row, column, direction) {\n\n    // row and column = the nonet's top left cell, for example 0,0 and 0,3 and 3,6, etc.\n    // if direction = row, main axis = row, cross axis = column\n    // if direction = column, main axis = column, cross axis = row\n\n    // If a nonet has candidates that only exist in a row or column within the nonet, remove those candidates from other cells in the same row or column outside the nonet.\n    // For example: [6, 8, 3, [1,2], [1,2], 9, 7, 4, 5] <- nonetValues; 1s and 2s in the same row\n    // For example: [9, 6, [1,4,5], 7, 3, [1,4,5], [1,5], 2, 8] <- nonetValues; 4s in the same column\n\n    const nonetValues = getNonetValues(grid, row, column);\n    const results = [];\n\n    const nonetMainAxisSet1 = nonetValues.filter(function(value, index) {\n        if (direction === 'row') {\n            return index <= 2;\n        } else {\n            // direction === 'column'\n            return index === 0 || index === 3 || index === 6;\n        }\n    }).filter(function(value) {\n        return Array.isArray(value);\n    });\n\n    const nonetMainAxisSet2 = nonetValues.filter(function(value, index) {\n        if (direction === 'row') {\n            return index >=3 && index <=5;\n        } else {\n            // direction === 'column'\n            return index === 1 || index === 4 || index === 7;\n        }\n    }).filter(function(value) {\n        return Array.isArray(value);\n    });\n\n    const nonetMainAxisSet3 = nonetValues.filter(function(value, index) {\n        if (direction === 'row') {\n            return index >= 6;\n        } else {\n            // direction === 'column'\n            return index === 2 || index === 5 || index === 8;\n        }\n    }).filter(function(value) {\n        return Array.isArray(value);\n    });\n\n    const nonetMainAxisSets = [nonetMainAxisSet1, nonetMainAxisSet2, nonetMainAxisSet3];\n    let allCandidatesInCrossAxisSets = [];\n\n    nonetMainAxisSets.forEach(function(nonetMainAxisSet) {\n        if (nonetMainAxisSet.length === 0) {\n            allCandidatesInCrossAxisSets.push([]);\n        } else {\n            let allCandidatesInMainAxisSet = nonetMainAxisSet.reduce(function(accumulator, current) {\n                return accumulator.concat(current);\n            }, []);\n            allCandidatesInMainAxisSet = Array.from(new Set(allCandidatesInMainAxisSet));\n            allCandidatesInCrossAxisSets.push(allCandidatesInMainAxisSet);\n        }\n    });\n\n    allCandidatesInCrossAxisSets.forEach(function(allCandidatesInMainAxisSet, index) {\n\n        let otherMainAxisSet1;\n        let otherMainAxisSet2;\n\n        if (index === 0) {\n            otherMainAxisSet1 = index + 1;\n            otherMainAxisSet2 = index + 2;\n        }\n        if (index === 1) {\n            otherMainAxisSet1 = index - 1;\n            otherMainAxisSet2 = index + 1;\n        }\n        if (index === 2) {\n            otherMainAxisSet1 = index - 2;\n            otherMainAxisSet2 = index - 1;\n        }\n\n        const allCandidatesUniqueToMainAxisSet = allCandidatesInMainAxisSet.filter(function(value) {\n            const otherNonetMainAxisSetsValues = nonetMainAxisSets[otherMainAxisSet1].concat(nonetMainAxisSets[otherMainAxisSet2]).reduce(function(accumulator, current) {\n                return accumulator.concat(current);\n            }, []);\n            return !otherNonetMainAxisSetsValues.includes(value);\n        });\n\n        let gridMainAxisSetIndex;\n        let gridMainAxisSetValues;\n        let indexesToInclude;\n\n        if (direction === 'row') {\n            gridMainAxisSetIndex = row + index;\n            gridMainAxisSetValues = getRowValues(grid, gridMainAxisSetIndex);\n\n            if (column === 0) {\n                indexesToInclude = [3, 4, 5, 6, 7, 8];\n            }\n            if (column === 3) {\n                indexesToInclude = [0, 1, 2, 6, 7, 8];\n            }\n            if (column === 6) {\n                indexesToInclude = [0, 1, 2, 3, 4, 5];\n            }\n        }\n        if (direction === 'column') {\n            gridMainAxisSetIndex = column + index;\n            gridMainAxisSetValues = getColumnValues(grid, gridMainAxisSetIndex);\n\n            if (row === 0) {\n                indexesToInclude = [3, 4, 5, 6, 7, 8];\n            }\n            if (row === 3) {\n                indexesToInclude = [0, 1, 2, 6, 7, 8];\n            }\n            if (row === 6) {\n                indexesToInclude = [0, 1, 2, 3, 4, 5];\n            }\n        }\n\n        gridMainAxisSetValues.forEach(function(cellValue, gridCrossAxisSetIndex) {\n            if (indexesToInclude.includes(gridCrossAxisSetIndex)) {\n                if (Array.isArray(cellValue) && cellValue.length > 1) {\n                    const newCandidates = cellValue.filter(function(value) {\n                        return !allCandidatesUniqueToMainAxisSet.includes(value);\n                    });\n                    if (direction === 'row') {\n                        if (newCandidates.length < cellValue.length) {\n                            results.push({\n                                row: gridMainAxisSetIndex,\n                                column: gridCrossAxisSetIndex,\n                                value: newCandidates\n                            });\n                        }\n                    }\n                    if (direction === 'column') {\n                        if (newCandidates.length < cellValue.length) {\n                            results.push({\n                                row: gridCrossAxisSetIndex,\n                                column: gridMainAxisSetIndex,\n                                value: newCandidates\n                            });\n                        }\n                    }\n                    \n                }\n            }\n        });\n\n    });\n\n    if (results.length !== 0) {\n        return results;\n    }\n\n}\n\nfunction solveCell(grid, row, column) {\n\n    if (!(isCellSolved(grid, row, column))) {\n\n        const candidates = getCandidates(grid, row, column);\n        let newCandidates = [];\n\n        // if a single candidate works, store that value\n        if (Array.isArray(candidates) && candidates.length === 1) {    \n            return {\n                row: row,\n                column: column,\n                value: candidates[0]\n            };\n        }\n\n        const rowArrayValues = getRowValues(grid, row).filter(function(value, index) {\n            return index !== column;\n        }).filter(function(value) {\n            return Array.isArray(value) && value.length !== 0;\n        });\n\n        const columnArrayValues = getColumnValues(grid, column).filter(function(value, index) {\n            return index !== row;\n        }).filter(function(value) {\n            return Array.isArray(value) && value.length !== 0;\n        });\n\n        if (rowArrayValues.length && Array.isArray(candidates)) {\n            // if one of the candidates doesn't exist in any rowArrayValues,\n            // add that value to newCandidates array\n            candidates.forEach(function(candidate) {\n                \n                const candidateInSomeArray = rowArrayValues.some(function(arrayValue) {\n                    return arrayValue.includes(candidate);\n                });\n\n                if (candidateInSomeArray) {\n                    // do nothing, the candidate exists as a candidate for another cell in the same row\n                } else {\n                    newCandidates.push(candidate);\n                }\n                \n            });\n        }\n\n        if (columnArrayValues.length && Array.isArray(candidates)) {\n            // if one of the candidates doesn't exist in any columnArrayValues,\n            // add that value to newCandidates array\n            candidates.forEach(function(candidate) {\n                \n                const candidateInSomeArray = columnArrayValues.some(function(arrayValue) {\n                    return arrayValue.includes(candidate);\n                });\n\n                if (candidateInSomeArray) {\n                    // do nothing, the candidate exists as a candidate for another cell in the same column\n                } else {\n                    newCandidates.push(candidate);\n                }\n                \n            });\n        }\n\n        newCandidates = Array.from(new Set(newCandidates));\n\n        if (newCandidates.length === 1) {\n            return {\n                row: row,\n                column: column,\n                value: newCandidates[0]\n            };\n        }\n        if (newCandidates.length > 1) {\n            return {\n                row: row,\n                column: column,\n                value: newCandidates\n            };\n        }\n        \n    } // end if\n\n}\n\nfunction setCandidates(grid) {\n    const cellsWithCandidates = [];\n    grid.forEach(function(row, i) {\n        row.forEach(function(column, j) {\n            if (!(isCellSolved(grid, i, j))) {\n                const cellValue = getCandidates(grid, i, j);\n                if (cellValue !== undefined) {\n                    cellsWithCandidates.push({\n                        row: i,\n                        column: j,\n                        value: cellValue\n                    });\n                }\n            }\n        });\n    });\n    return updateGrid(grid, cellsWithCandidates);\n}\n\nfunction solveCells(grid) {\n    const solvedCells = [];\n    grid.forEach(function(row, i) {\n        row.forEach(function(column, j) {\n            if (!(isCellSolved(grid, i, j))) {\n                const cell = solveCell(grid, i, j);\n                if (cell !== undefined) {\n                    solvedCells.push(cell);\n                }\n            }\n        });\n    });\n    const updatedGrid = updateGrid(grid, solvedCells);\n\n    return setCandidates(updatedGrid);\n}\n\nfunction verifyCompletedGrid(grid) {\n    const gridColumns = [];\n    const gridNonets = [];\n\n    // Check rows\n    const allRowsIncludeAllValues = grid.every(function(row) {\n        return row.every(function(value) {\n            return [1,2,3,4,5,6,7,8,9].includes(value);\n        });\n    });\n\n    // Check columns\n    grid[0].forEach(function(column, index) {\n        gridColumns.push(getColumnValues(grid, index));\n    });\n\n    const allColumnsIncludeAllValues = gridColumns.every(function(column) {\n        return column.every(function(value) {\n            return [1,2,3,4,5,6,7,8,9].includes(value);\n        });\n    });\n\n    // Check nonets\n    for (let row = 0; row <= 6; row = row + 3) {\n        for (let col = 0; col <= 6; col = col + 3) {\n            gridNonets.push(getNonetValues(grid, row, col));\n        }\n    }\n\n    const allNonetsIncludeAllValues = gridNonets.every(function(nonet) {\n        return nonet.every(function(value) {\n            return [1,2,3,4,5,6,7,8,9].includes(value);\n        });\n    });\n\n    if (allRowsIncludeAllValues && allColumnsIncludeAllValues && allNonetsIncludeAllValues) {\n        return true;\n    }\n\n}\n\nexport { setCandidates, solveCells, solveNonets, removeNakeds, reduceCandidatesXWing, initReduceCandidates, verifyCompletedGrid, getGridNextAnswers, getGridAnswers, getDiffOfCompletedCells };\n","import React, { useState, useRef } from 'react';\nimport Cell from './Cell';\nimport NumberPad from './NumberPad';\nimport {setCandidates} from './logic';\nimport _ from 'lodash';\nimport './Grid.css';\n\nfunction Grid(props) {\n\n    const ref = useRef(null);\n    const {currentGridValues, pastGridValues, completedGrid, updateGame, givens, nextPossibleAnswers, showCandidates, highlightGivens, highlightSolvableCells, highlightIncorrectCells} = props;\n    const [cellClicked, setCellClicked] = useState(null);\n    const [activeCell, setActiveCell] = useState(null);\n\n    function handleCellClick(coords, e) {\n        if (cellClicked === e.target) {\n            ref.current.isActive ? ref.current.hideNumberPad() : ref.current.showNumberPad();\n        } else {\n            ref.current.showNumberPad();\n        }\n        setCellClicked(e.target);\n        setActiveCell(coords);\n        e.target.select();\n    }\n\n    function handleNumberPadButtonClick(e) {\n        const newGridValues = _.cloneDeep(currentGridValues);\n        const row = activeCell[0];\n        const col = activeCell[1];\n        \n        if (e.target.className === 'clear-button') {\n            newGridValues[row][col] = pastGridValues[row][col];\n        } else if (e.target.className === 'solve-button') {\n            newGridValues[row][col] = completedGrid[row][col];\n        } else {\n            newGridValues[row][col] = Number(e.target.value);\n        }\n\n        const isCorrect = newGridValues[row][col] === completedGrid[row][col];\n\n        if (isCorrect) {\n            updateGame(setCandidates(newGridValues));\n        } else {\n            updateGame(newGridValues);\n        }\n        \n        ref.current.hideNumberPad();\n    }\n\n    function handleKeyDown(coords, e) {\n        const newGridValues = _.cloneDeep(currentGridValues);\n        const row = coords[0];\n        const col = coords[1];\n\n        if (e.key === 'Backspace' || e.key === 'Delete') {\n            newGridValues[row][col] = [];\n        } else if (RegExp('[1-9]').test(e.key)) {\n            newGridValues[row][col] = Number(e.key);\n        } else {\n            e.preventDefault();\n        }\n\n        const isCorrect = newGridValues[row][col] === completedGrid[row][col];\n\n        if (isCorrect) {\n            updateGame(setCandidates(newGridValues));\n        } else {\n            updateGame(newGridValues);\n        }\n\n        ref.current.hideNumberPad();\n    }\n\n    function handleChange(coords, e) {\n        // This isn't needed? But without 'onChange' on the Cell input React throws a warning in the console\n        /*const newGridValues = _.cloneDeep(currentGridValues);\n        const row = coords[0];\n        const col = coords[1];\n        newGridValues[row][col] = Number(e.target.value);\n        updateGame(newGridValues);\n        ref.current.hideNumberPad();*/\n    }\n\n    function createGrid() {\n        let grid = [];\n    \n        for (let i = 0; i < 9; i++) {\n            for (let j = 0; j < 9; j++) {\n                grid.push(renderCell(i, j));\n            }\n        }\n    \n        return grid;\n    }\n    \n    function renderCell(i, j) {\n        return (\n            <Cell\n                key={`r${i}c${j}`}\n                row={i}\n                column={j}\n                value={currentGridValues[i][j]}\n                handleChange={handleChange}\n                handleClick={handleCellClick}\n                handleKeyDown={handleKeyDown}\n                isGiven={Number.isInteger(givens[i][j])}\n                canBeSolved={Number.isInteger(nextPossibleAnswers[i][j])}\n                isIncorrect={ props.isInGameMode && (Number.isInteger(currentGridValues[i][j]) && currentGridValues[i][j] !== completedGrid[i][j]) }\n            />\n        );\n    }\n\n    const gridClassName = `grid${showCandidates === false ? ' hide-candidates' : ''}${highlightGivens === true ? ' highlight-givens' : ''}${highlightSolvableCells === true ? ' highlight-solvable-cells' : ''}${highlightIncorrectCells === true ? ' highlight-incorrect-cells' : ''}`;\n\n    return (\n        <div className=\"grid-wrapper\">\n            <div id=\"grid\" className={gridClassName}>\n                {createGrid()}\n            </div>\n            <NumberPad\n                cellClicked={cellClicked}\n                handleClick={handleNumberPadButtonClick}\n                ref={ref}\n            />\n        </div>\n    );\n}\n\nexport default Grid;","const games = {\n    'easy': [\n        [[[],[],[],[],[],3,1,[],4],[2,6,[],5,[],4,[],[],[]],[[],3,9,[],[],[],8,5,[]],[7,[],3,[],4,6,[],[],[]],[[],[],[],3,[],8,[],[],[]],[[],[],[],7,1,[],4,[],3],[[],4,2,[],[],[],7,3,[]],[[],[],[],4,[],5,[],1,9],[9,[],6,8,[],[],[],[],[]]],\n        [[[],[],4,7,[],[],5,[],6],[[],[],1,[],[],4,[],[],2],[2,[],[],[],1,[],[],[],8],[1,[],9,[],7,3,[],[],[]],[[],6,[],1,[],5,[],2,[]],[[],[],[],6,9,[],7,[],1],[5,[],[],[],2,[],[],[],7],[7,[],[],3,[],[],2,[],[]],[9,[],2,[],[],7,8,[],[]]]\n    ],\n    'medium': [\n        [[3,[],[],[],6,[],[],[],[]],[[],1,4,[],[],[],9,[],7],[6,5,[],[],[],7,[],[],[]],[[],8,[],[],2,5,[],[],[]],[1,[],9,[],[],[],6,[],2],[[],[],[],6,9,[],[],8,[]],[[],[],[],4,[],[],[],7,6],[4,[],1,[],[],[],5,9,[]],[[],[],[],[],7,[],[],[],8]],\n        [[[],[],[],[],1,[],[],6,9],[[],[],[],[],[],8,[],3,7],[[],[],[],[],[],[],8,[],[]],[4,[],[],3,2,1,9,[],[]],[[],[],7,[],9,[],5,[],[]],[[],[],2,7,5,6,[],[],3],[[],[],8,[],[],[],[],[],[]],[5,3,[],2,[],[],[],[],[]],[9,2,[],[],4,[],[],[],[]]]\n    ],\n    'hard': [\n        [[[],7,[],[],[],[],[],[],[]],[[],[],[],[],[],[],8,[],[]],[2,[],6,[],9,1,4,[],[]],[[],[],[],9,[],[],[],6,[]],[[],1,5,[],[],7,[],4,[]],[[],8,[],[],5,[],[],9,[]],[[],3,[],4,[],[],[],[],[]],[[],[],8,[],6,[],7,[],[]],[7,[],[],[],3,[],[],1,9]],\n        [[5,[],3,7,6,[],[],[],[]],[[],2,6,[],[],[],7,[],[]],[[],[],[],1,[],[],[],8,[]],[7,[],[],[],4,[],[],[],1],[[],[],4,[],[],[],[],[],6],[[],1,[],[],[],6,[],7,3],[9,[],[],[],[],[],[],[],8],[[],[],[],[],[],5,[],[],[]],[[],[],[],6,[],3,1,9,[]]],\n        [[[],6,[],[],[],5,[],[],[]],[[],7,[],[],[],[],[],[],1],[[],[],[],[],6,3,4,[],[]],[[],[],3,[],8,[],[],[],[]],[2,1,[],[],9,[],[],[],5],[4,[],[],[],[],7,8,[],[]],[[],[],1,6,[],[],[],8,4],[[],[],[],[],[],[],[],5,[]],[8,[],[],[],4,[],6,1,[]]],\n        [[[],[],5,7,[],[],[],[],[]],[[],[],7,[],[],9,6,[],8],[[],8,[],[],[],2,[],1,[]],[[],3,[],[],[],[],[],[],[]],[5,[],[],2,6,1,[],7,[]],[[],[],[],8,[],[],1,[],9],[[],[],[],1,[],[],[],[],3],[3,[],9,[],2,[],[],8,[]],[[],[],[],[],4,[],[],[],[]]],\n        [[[],3,[],[],[],5,[],[],[]],[5,1,[],[],3,[],8,[],7],[[],[],[],4,[],[],[],[],1],[[],6,[],2,[],[],[],1,[]],[[],[],1,[],[],[],7,[],[]],[[],9,[],[],[],1,[],4,[]],[4,[],[],[],[],9,[],[],[]],[1,[],9,[],8,[],[],7,5],[[],[],[],3,[],[],[],8,[]]],\n        [[[],[],[],[],[],8,[],7,[]],[[],[],5,[],6,9,[],[],[]],[[],[],[],[],[],5,8,9,2],[[],[],1,6,[],[],[],3,[]],[4,[],[],[],[],[],[],[],1],[[],9,[],[],[],1,4,[],[]],[7,4,3,9,[],[],[],[],[]],[[],[],[],4,2,[],3,[],[]],[[],8,[],5,[],[],[],[],[]]],\n        [[[],[],2,1,8,6,[],[],[]],[[],[],[],[],[],[],2,[],[]],[[],3,[],9,[],[],[],[],[]],[2,[],3,6,[],[],8,9,[]],[4,[],[],[],5,[],[],[],1],[[],6,8,[],[],2,7,[],5],[[],[],[],[],[],9,[],5,[]],[[],[],4,[],[],[],[],[],[]],[[],[],[],3,6,7,9,[],[]]],\n        [[6,[],[],[],9,2,[],[],[]],[[],[],8,5,[],6,[],[],2],[3,[],[],4,[],[],[],[],[]],[2,[],4,[],[],[],[],8,[]],[[],[],5,[],[],[],[],[],1],[[],[],[],9,[],[],6,[],5],[[],[],[],[],1,[],3,[],[]],[4,[],[],[],[],[],[],9,[]],[[],1,[],7,8,[],[],[],6]],\n        [[9,6,[],[],1,[],[],[],3],[3,1,[],[],8,[],2,[],[]],[[],[],[],[],[],[],8,[],[]],[[],4,9,[],[],6,[],[],[]],[1,[],[],[],9,8,[],[],[]],[[],[],6,5,[],[],[],3,7],[[],3,[],[],[],[],[],2,6],[[],9,[],1,[],[],[],[],[]],[[],7,4,[],2,5,[],9,[]]],\n        [[6,[],[],[],[],[],[],3,[]],[[],[],1,[],[],[],5,[],7],[[],7,[],2,[],4,[],8,[]],[7,[],2,4,[],6,[],[],[]],[[],[],[],[],[],[],3,[],[]],[9,1,[],[],[],[],2,7,4],[[],6,7,8,9,[],1,4,3],[1,4,[],[],3,[],[],9,[]],[[],[],[],[],4,[],[],[],2]]\n    ],\n    'expert': [\n        [[[],[],[],9,[],2,[],[],5],[[],[],[],[],[],5,1,3,[]],[[],[],9,[],[],[],[],2,[]],[[],5,3,[],[],[],[],[],6],[4,[],[],[],8,[],[],[],1],[9,[],[],[],[],[],4,7,[]],[[],6,[],[],[],[],7,[],[]],[[],9,1,4,[],[],[],[],[]],[8,[],[],5,[],7,[],[],[]]],\n        [[[],[],[],9,[],2,[],[],5],[[],[],[],[],[],5,1,3,[]],[[],[],9,[],[],[],[],2,[]],[[],5,3,[],[],[],[],[],6],[4,[],[],[],8,[],[],[],1],[9,[],[],[],[],[],4,7,[]],[[],6,[],[],[],[],7,[],[]],[[],9,1,4,[],[],[],[],[]],[8,[],[],5,[],7,[],[],[]]],\n        [[[],[],[],8,[],[],[],1,[]],[[],[],[],2,[],[],8,9,6],[[],[],[],[],6,[],[],[],2],[2,[],[],[],[],[],3,[],[]],[[],[],8,3,[],1,4,[],[]],[[],[],7,[],[],[],[],[],9],[6,[],[],[],7,[],[],[],[]],[9,7,2,[],[],3,[],[],[]],[[],3,[],[],[],4,[],[],[]]],\n        [[[],9,1,[],[],[],[],[],5],[[],[],[],[],9,4,3,[],[]],[[],3,[],6,[],[],[],[],[]],[[],[],[],[],[],[],[],7,9],[2,[],[],1,[],7,[],[],6],[8,5,[],[],[],[],[],[],[]],[[],[],[],[],[],1,[],5,[]],[[],[],2,4,3,[],[],[],[]],[5,[],[],[],[],[],2,4,[]]],\n        [[[],[],[],[],[],1,[],[],[]],[[],6,[],[],[],[],4,[],[]],[[],9,[],5,3,[],[],[],8],[[],4,[],[],5,3,[],[],7],[[],8,[],[],[],[],[],5,[]],[7,[],[],1,2,[],[],6,[]],[8,[],[],[],1,6,[],2,[]],[[],[],5,[],[],[],[],9,[]],[[],[],[],8,[],[],[],[],[]]],\n        [[[],[],[],[],[],7,3,[],[]],[[],7,[],[],8,[],5,[],9],[6,[],1,[],[],[],[],[],7],[[],[],5,[],[],6,[],9,[]],[[],[],[],[],4,[],[],[],[]],[[],6,[],5,[],[],2,[],[]],[2,[],[],[],[],[],9,[],1],[1,[],9,[],5,[],[],7,[]],[[],[],3,8,[],[],[],[],[]]],\n        [[3,[],[],[],[],2,[],[],6],[[],[],[],[],[],[],[],[],[]],[[],[],[],6,4,[],7,3,5],[[],1,[],[],2,[],[],6,[]],[6,[],[],4,[],7,[],[],1],[[],9,[],[],3,[],[],2,[]],[5,2,3,[],6,1,[],[],[]],[[],[],[],[],[],[],[],[],[]],[7,[],[],5,[],[],[],[],2]],\n        [[7,[],[],1,4,[],[],[],9],[1,[],[],2,[],[],[],4,[]],[[],5,[],[],3,[],[],[],[]],[[],[],[],[],2,[],1,[],4],[[],[],6,[],7,[],8,[],[]],[5,[],1,[],9,[],[],[],[]],[[],[],[],[],5,[],[],6,[]],[[],3,[],[],[],4,[],[],7],[2,[],[],[],8,6,[],[],1]],\n        [[[],[],[],[],5,4,3,8,[]],[[],[],5,9,8,[],[],[],2],[[],8,[],[],3,[],[],[],[]],[5,[],[],6,[],[],[],7,[]],[3,[],4,[],7,[],2,[],9],[[],7,[],[],[],9,[],[],1],[[],[],[],[],1,[],[],2,[]],[7,[],[],[],9,3,6,[],[]],[[],5,1,7,6,[],[],[],[]]],\n        [[[],[],[],[],[],[],6,8,[]],[[],[],[],[],7,3,[],[],9],[3,[],9,[],[],[],[],4,5],[4,9,[],[],[],[],[],[],[]],[8,[],3,[],5,[],9,[],2],[[],[],[],[],[],[],[],3,6],[9,6,[],[],[],[],3,[],8],[7,[],[],6,8,[],[],[],[]],[[],2,8,[],[],[],[],[],[]]],\n        [[6,[],[],1,7,[],[],[],5],[[],[],[],[],4,[],[],2,[]],[[],[],[],[],[],[],8,9,[]],[[],3,7,8,[],[],[],[],2],[5,[],[],[],[],1,[],[],9],[[],[],2,[],[],[],[],[],[]],[[],[],5,[],2,4,[],[],[]],[[],[],[],[],1,[],6,[],[]],[7,[],[],3,[],[],[],[],[]]],\n        [[[],[],[],1,[],[],6,[],3],[[],8,7,[],4,[],[],[],5],[9,[],3,[],[],[],[],[],[]],[[],[],5,[],[],6,[],[],[]],[7,[],[],[],[],1,[],[],[]],[[],9,[],[],[],3,[],5,[]],[1,6,[],[],[],[],[],[],[]],[5,[],[],[],[],[],7,[],4],[[],[],[],[],8,[],[],[],2]],\n        [[[],[],[],6,[],[],[],8,[]],[[],[],2,[],[],5,[],4,[]],[[],[],3,[],2,[],[],1,[]],[[],2,6,[],[],7,1,[],[]],[9,[],[],[],[],[],[],[],5],[[],[],4,9,[],[],2,7,[]],[[],1,[],[],5,[],3,[],[]],[[],6,[],3,[],[],8,[],[]],[[],9,[],[],[],1,[],[],[]]],\n        [[[],[],[],3,[],[],6,5,[]],[[],[],1,[],2,[],[],8,[]],[5,3,[],6,9,[],[],1,[]],[[],[],5,[],[],2,1,3,[]],[[],[],[],9,5,[],2,4,[]],[7,[],[],[],[],[],8,[],[]],[[],[],7,8,[],[],5,[],3],[8,[],[],[],3,[],[],7,[]],[2,4,3,[],1,7,[],6,[]]]\n    ]\n}\n\nexport default games;","import React, { useState } from 'react';\nimport games from './games';\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction NewGamePanel(props) {\n\n    const [difficultyLevel, setDifficultyLevel] = useState('Easy');\n    const {createNewGame, createCustomGame, toggleMenu} = props;\n\n    function generateGame() {\n        if (difficultyLevel === 'Easy') {\n            createNewGame(\n                games.easy[getRandomInt(games.easy.length)]\n            );\n        }\n        if (difficultyLevel === 'Medium') {\n            createNewGame(\n                games.medium[getRandomInt(games.medium.length)]\n            );\n        }\n        if (difficultyLevel === 'Hard') {\n            createNewGame(\n                games.hard[getRandomInt(games.hard.length)]\n            );\n        }\n        if (difficultyLevel === 'Expert') {\n            createNewGame(\n                games.expert[getRandomInt(games.expert.length)]\n            );\n        }\n    }\n\n    return (\n        <div className=\"new-game-panel\">\n            <div className=\"form-group\">\n                <label htmlFor=\"difficulty-selector\">Difficulty: </label>\n                <select\n                    id=\"difficulty-selector\"\n                    className=\"form-control\"\n                    value={difficultyLevel}\n                    onChange={(e) => {\n                        setDifficultyLevel(e.target.value);\n                    }}\n                >\n                    <option value=\"Easy\">Easy</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Hard\">Hard</option>\n                    <option value=\"Expert\">Expert</option>\n                </select>\n            </div>\n            <button className=\"btn btn-block btn-primary\" onClick={() => {\n                generateGame();\n                toggleMenu();\n            }}>\n                Generate Game\n            </button>\n            <button className=\"btn btn-block btn-primary\" onClick={() => {\n                createCustomGame();\n                toggleMenu();\n            }}>\n                Create Custom Game\n            </button>\n        </div>\n    );\n}\n\nexport default NewGamePanel;","import React from 'react';\n\nfunction GameSettingsPanel(props) {\n\n    const {\n        showCandidates, setShowCandidates,\n        highlightGivens, setHighlightGivens,\n        highlightSolvableCells, setHighlightSolvableCells,\n        highlightIncorrectCells, setHighlightIncorrectCells\n    } = props;\n\n    return (\n        <div className=\"game-settings\">\n            <div className=\"form-group form-check\">\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"show-candidates\"\n                    name=\"show-candidates\"\n                    checked={showCandidates}\n                    onChange={(e) => {\n                        setShowCandidates(e.target.checked);\n                    }}\n                />\n                <label htmlFor=\"show-candidates\" className=\"form-check-label\">\n                    Show Candidates\n                </label>\n            </div>\n            <div className=\"form-group form-check\">\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"highlight-givens\"\n                    name=\"highlight-givens\"\n                    checked={highlightGivens}\n                    onChange={(e) => {\n                        setHighlightGivens(e.target.checked);\n                    }}\n                />\n                <label htmlFor=\"highlight-givens\" className=\"form-check-label\">\n                    Highlight Givens\n                </label>\n            </div>\n            <div className=\"form-group form-check\">\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"highlight-solvable\"\n                    name=\"highlight-solvable\"\n                    checked={highlightSolvableCells}\n                    onChange={(e) => {\n                        setHighlightSolvableCells(e.target.checked);\n                    }}\n                />\n                <label htmlFor=\"highlight-solvable\" className=\"form-check-label\">\n                    Highlight Solvable Cells\n                </label>\n            </div>\n            <div className=\"form-group form-check\">\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"highlight-incorrect-cells\"\n                    name=\"highlight-incorrect-cells\"\n                    checked={highlightIncorrectCells}\n                    onChange={(e) => {\n                        setHighlightIncorrectCells(e.target.checked);\n                    }}\n                />\n                <label htmlFor=\"highlight-incorrect-cells\" className=\"form-check-label\">\n                    Highlight Incorrect Cells\n                </label>\n            </div>\n        </div>\n    );\n}\n\nexport default GameSettingsPanel;","import React from 'react';\nimport './History.css';\n\nfunction History(props) {\n\n    const currentStep = props.currentStep;\n    const historyLength = props.history.length;\n\n    // Previous Button\n    const previousButtonAttrs = {\n        onClick: () => props.jumpToStepInHistory(currentStep - 1),\n        disabled: false,\n        className: 'btn btn-primary'\n    }\n    if (currentStep === 0) {\n        previousButtonAttrs.disabled = true;\n    }\n\n    // Next Button\n    const nextButtonAttrs = {\n        onClick: () => props.jumpToStepInHistory(currentStep + 1),\n        disabled: false,\n        className: 'btn btn-primary'\n    }\n    if (historyLength - 1 === currentStep) {\n        nextButtonAttrs.disabled = true;\n    }\n\n    return (\n        <div className=\"history\">\n            <div className=\"history-nav d-flex\">\n                <button {...previousButtonAttrs}><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-left\" className=\"svg-inline--fa fa-caret-left fa-w-6\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\"><path fill=\"currentColor\" d=\"M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z\"></path></svg><span className=\"sr-only\">Previous Step</span></button>\n                    <span className=\"history-current-step\">{currentStep}&nbsp;/&nbsp;{historyLength - 1}</span>\n                <button {...nextButtonAttrs}><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-right\" className=\"svg-inline--fa fa-caret-right fa-w-6\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\"><path fill=\"currentColor\" d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"></path></svg><span className=\"sr-only\">Next Step</span></button>\n            </div>\n        </div>\n    );\n}\n\nexport default History;","import React, { useState, useEffect, useCallback } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Grid from './Grid';\nimport NewGamePanel from './NewGamePanel';\nimport GameSettingsPanel from './GameSettingsPanel';\nimport History from './History';\nimport { setCandidates, verifyCompletedGrid, getGridAnswers, getGridNextAnswers, getDiffOfCompletedCells } from './logic';\nimport _ from 'lodash';\n\nfunction App() {\n\n    function generateEmptyBoard() {\n        return [[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[]]];\n    }\n\n    const [history, setHistory] = useState(\n        JSON.parse(localStorage.getItem('sudokuHistory')) || [{\n            grid: generateEmptyBoard()\n        }]\n    );\n\n    const [stepNumber, setStepNumber] = useState(\n        Number(localStorage.getItem('sudokuStepNumber')) || 0\n    );\n\n    const [isInGameMode, setIsInGameMode] = useState(true);\n\n    const [showCandidates, setShowCandidates] = useState(\n        localStorage.getItem('sudokuShowCandidates')\n        ? JSON.parse(localStorage.getItem('sudokuShowCandidates'))\n        : false\n    );\n\n    const [highlightGivens, setHighlightGivens] = useState(\n        localStorage.getItem('sudokuHighlightGivens')\n        ? JSON.parse(localStorage.getItem('sudokuHighlightGivens'))\n        : true\n    );\n\n    const [highlightSolvableCells, setHighlightSolvableCells] = useState(\n        localStorage.getItem('sudokuHighlightSolvableCells')\n        ? JSON.parse(localStorage.getItem('sudokuHighlightSolvableCells'))\n        : true\n    );\n\n    const [highlightIncorrectCells, setHighlightIncorrectCells] = useState(\n        localStorage.getItem('sudokuHighlightIncorrectCells')\n        ? JSON.parse(localStorage.getItem('sudokuHighlightIncorrectCells'))\n        : true\n    );\n\n    const [menuIsOpen, setMenuIsOpen] = useState(false);\n\n    function toggleMenu() {\n        setMenuIsOpen(!menuIsOpen);\n    }\n\n    const prevHistory = _.cloneDeep(history);\n    const addHistory = newHistory => setHistory([...prevHistory, newHistory]);\n    const currentGridValues = history[stepNumber].grid;\n    const nextGridValues = getGridNextAnswers(currentGridValues);\n    const nextPossibleAnswers = getDiffOfCompletedCells(currentGridValues, nextGridValues);\n    let completedGrid = isInGameMode ? getGridAnswers(history[0].grid) : generateEmptyBoard();\n\n    const checkCompletedGridMemoizedCallback = useCallback(\n        (grid) => {\n            if (isGridFull(grid) === true) {\n                if (_.isEqual(grid, completedGrid)) {\n                    if (verifyCompletedGrid(grid) === true) {\n                        alert('Congrats! Sudoku game completed successfully!');\n                    }\n                } else {\n                    alert('Sorry, some numbers aren\\'t where they should be.');\n                }\n            }\n        }, [completedGrid]\n    );\n\n    useEffect(() => {\n        localStorage.setItem('sudokuHistory', JSON.stringify(history));\n        localStorage.setItem('sudokuStepNumber', stepNumber);\n        localStorage.setItem('sudokuShowCandidates', showCandidates);\n        localStorage.setItem('sudokuHighlightGivens', highlightGivens);\n        localStorage.setItem('sudokuHighlightSolvableCells', highlightSolvableCells);\n        localStorage.setItem('sudokuHighlightIncorrectCells', highlightIncorrectCells);\n        checkCompletedGridMemoizedCallback(currentGridValues);\n    }, [history, stepNumber, showCandidates, highlightGivens, highlightSolvableCells, highlightIncorrectCells, checkCompletedGridMemoizedCallback, currentGridValues]);\n    \n    function updateGame(updatedGrid) {\n        if (isInGameMode) {\n            addHistory({\n                grid: updatedGrid\n            });\n            setStepNumber(history.length);\n        } else {\n            setHistory([{\n                grid: updatedGrid\n            }]);\n        }\n    }\n\n    function jumpToStepInHistory(step) {\n        setStepNumber(step);\n    }\n\n    function createCustomGame() {\n        setHistory([{ grid: generateEmptyBoard() }]);\n        setStepNumber(0);\n        setIsInGameMode(false);\n    }\n\n    function createNewGame(initialGrid) {\n        setHistory([{ grid: setCandidates(initialGrid) }]);\n        setStepNumber(0);\n        setIsInGameMode(true);\n    }\n\n    function isGridFull(currentGridValues) {\n        const currentGridValuesFlat = currentGridValues.flat();\n        return currentGridValuesFlat.every((value) => Number.isInteger(value));\n    }\n\n    return (\n        <div className=\"App\">\n            <Dropdown id=\"dropdown-game-menu\" className=\"text-right\" show={menuIsOpen}>\n                <Dropdown.Toggle variant=\"primary\" id=\"game-menu\" onClick={() => { toggleMenu() }}>\n                    <span className=\"sr-only\">Menu</span>\n                    <span className=\"navbar-toggler-icon\"></span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"p-4\">\n                    <h2>Start a New Game</h2>\n                    <NewGamePanel\n                        createNewGame={createNewGame}\n                        createCustomGame={createCustomGame}\n                        toggleMenu={toggleMenu}\n                    />\n                    <Dropdown.Divider />\n                    <h2>Settings</h2>\n                    <GameSettingsPanel\n                        showCandidates={showCandidates}\n                        setShowCandidates={setShowCandidates}\n                        highlightGivens={highlightGivens}\n                        setHighlightGivens={setHighlightGivens}\n                        highlightSolvableCells={highlightSolvableCells}\n                        setHighlightSolvableCells={setHighlightSolvableCells}\n                        highlightIncorrectCells={highlightIncorrectCells}\n                        setHighlightIncorrectCells={setHighlightIncorrectCells}\n                    />\n                    <Dropdown.Divider />\n                    <button className=\"btn btn-block btn-primary\" onClick={() => {\n                        toggleMenu();\n                        updateGame(completedGrid);\n                    }}>\n                        Solve Puzzle\n                    </button>\n                </Dropdown.Menu>\n            </Dropdown>\n\n            <div className={isInGameMode === true ? \"custom-game-instructions d-none\" : \"custom-game-instructions\"}>\n                <p>Enter your starting numbers (\"givens\") in the cells to create your own game. When you have finished entering all the givens, click \"Start Game\" to start solving the puzzle.</p>\n                <button className=\"btn btn-primary\" onClick={() => { createNewGame(currentGridValues) }}>\n                    Start Game\n                </button>\n            </div>\n\n            <Grid\n                currentGridValues={currentGridValues}\n                pastGridValues={\n                    stepNumber > 0\n                        ? history[stepNumber - 1].grid\n                        : history[0].grid\n                }\n                updateGame={updateGame}\n                givens={history[0].grid}\n                highlightGivens={highlightGivens}\n                highlightSolvableCells={highlightSolvableCells}\n                highlightIncorrectCells={highlightIncorrectCells}\n                showCandidates={showCandidates}\n                nextPossibleAnswers={nextPossibleAnswers}\n                completedGrid={completedGrid}\n                isInGameMode={isInGameMode}\n            />\n            \n            <h2>Game History</h2>\n            <History\n                history={history}\n                jumpToStepInHistory={jumpToStepInHistory}\n                currentStep={stepNumber}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}